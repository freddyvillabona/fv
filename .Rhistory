# from single data.frame
# assumes they are links
graph(g$links)
# from data.frames
# pass only links
graph() %>%
graph_links(g$links, source, target)
# pass nodes and links
graph() %>%
graph_nodes(g$nodes, id) %>%
graph_links(g$links, source, target)
library(shiny)
gdata <- make_data(100)
library(shiny)
install.packages("shiny")
install.packages("shiny")
library(shiny)
gdata <- make_data(100)
library(grapher)
gdata <- make_data(100)
ui <- fluidPage(
sliderInput("node", "node to focus on", 1, max = 100, value = 5),
graphOutput("g", height = "80vh")
)
server <- function(input, output) {
output$g <- render_graph({
graph(gdata) %>%
graph_stable_layout(ms = 1500)
})
observeEvent(input$node, {
graph_proxy("g") %>%
graph_focus_node(input$node)
})
}
shinyApp(ui, server)
graph_data <- make_data()
graph() %>%
graph_nodes(graph_data$nodes, id)
# using a shiny proxy
library(shiny)
data1 <- make_data(150)
data2 <- make_data(50)
# nodes that do not overalp
# 120 = 30 new nodes added
noverlap <- 120
data2$nodes$id <- as.integer(data2$nodes$id) + noverlap
data2$links$source <- as.integer(data2$links$source) + noverlap
data2$links$target <- as.integer(data2$links$target) + noverlap
ui <- fluidPage(
actionButton("add", "add"),
graphOutput("g", height = "90vh")
)
server <- function(input, output) {
output$g <- render_graph({
graph(data1)
})
observeEvent(input$add, {
graph_proxy("g") %>%
graph_nodes(data2$nodes, id) %>%
graph_links(data2$links, source, target)
})
}
shinyApp(ui, server)
# preview_palettes
graph_palette()
graph_palette_light()
graph_data <- make_data(200)
graph_data %>%
graph() %>%
graph_cluster() %>%
scale_link_color(cluster, palette = graph_palette_light())
server <- function(input, output) {
output$g <- render_graph({
graph(data1)
})
observeEvent(input$add, {
graph_proxy("g") %>%
graph_nodes(data2$nodes, id) %>%
graph_links(data2$links, source, target)
})
}
shinyApp(ui, server)
graph_live_layout(
g,
spring_length = 30L,
sping_coeff = 8e-04,
gravity = -1.2,
theta = 0.8,
drag_coeff = 0.02,
time_step = 20L,
is_3d = TRUE
)
graph_layout_live(
g,
spring_length = 30L,
sping_coeff = 8e-04,
gravity = -1.2,
theta = 0.8,
drag_coeff = 0.02,
time_step = 20L,
is_3d = TRUE
)
setwd("/Users/fv/Desktop/Towers/images")
library("ggplot2")
data(diamonds)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab"")) +
scale_color_manual(values = c("#d53e4f",
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43"
"#66c2a5", "#3288bd",
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show. legend = FALSE) +
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom-violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot (aes(color = cut), alpha = 0.5, show.legend = FALSE)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE)
library("ggplot2")
data(diamonds)
ggplot(data = diamonds, aes(x = cut, y = price)) +
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds",
subtitle ="",
caption = "Data: diamonds\n",
fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis. text.y = element_text (size = 12),
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds",
subtitle ="",
caption = "Data: diamonds\n",
fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour
"black"),
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds",
subtitle ="",
caption = "Data: diamonds\n",
fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend. justification = c("right", "top"),
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds",
subtitle ="",
caption = "Data: diamonds\n",
fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5)
plot.caption = element_text(size = 10, face = "bold", hjust = panel.background))
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds",
subtitle ="",
caption = "Data: diamonds\n",
fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5)
plot.caption = element_text(size = 10, face = "bold", hjust = 1)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5)
plot.caption = element_text(size = 10, face = "bold", hjust = 1)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5)
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title-"InDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title="\nDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face-"bold"),
axis.title.y = element_text(size = 13, face-"bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text (colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title="\nDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face="bold"),
axis.title.y = element_text(size = 13, face="bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title="\nDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face="bold"),
axis.title.y = element_text(size = 13, face="bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title="\nDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face="bold"),
axis.title.y = element_text(size = 13, face="bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
library("ggplot2")
data(diamonds)
ggplot(data = diamonds, aes(x = cut, y = price)) +
scale_fill_manual (values = c("#d53e4f",
"#f46d43", "#66c2a5", "#3288bd", "#9970ab")) +
scale_color_manual(values = c("#d53e4f", "#f46d43",
"#66c2a5", "#3288bd",
"#9970ab")) +
geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +
geom_violin(aes(fill = cut), alpha = 0.5, color = NA) +
geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +
xlab("\nCut") +
ylab("Price") +
labs(title="\nDiamonds", subtitle ="", caption = "Data: diamonds\n", fill= "Cut") +
theme(
axis.text.x = element_text(size = 12),
axis.text.y = element_text (size = 12),
axis.title.x = element_text (size = 13, face="bold"),
axis.title.y = element_text(size = 13, face="bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face = "bold", hjust = 0.5),
plot.caption = element_text(size = 10, face = "bold", hjust = 1),
panel.background = element_rect(fill="white", colour="white")
)
