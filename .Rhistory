rm(list=ls())
# LIB
{
library(readxl)
library(ggplot2)
library(dplyr)
library(ggflags)
library(stringr)
}
# DATA
cup <- read.csv("cup.csv", sep=";", stringsAsFactors = FALSE)
cup <- cup[with(cup, order(-cup$WIN.WORLD.CUP)), ]
# ORDER
cup$TEAM <- gsub("\n","",cup$TEAM)
cup$TEAM <- gsub(" ","",cup$TEAM)
cup$TEAM <- str_replace_all(cup$TEAM," ", "")
cup$TEAM
cup <- head(cup,10)
names(cup)[12] = "Win"
new <- c(29.10, 12.00, 12.80,
12.90, 8.10, 0,
9.40, 6.00, 1.10, 0)
cup2 <- cbind(cup, new)
#PLOT
ggplot(data=cup2, aes(x= reorder(TEAM, -Win) , y=Win, group=1)) +
ggtitle("Ganar el Mundial de Fútbol 2022 (Top 10 favoritos)") +
xlab("País") +
ylab("Porcentaje") +
geom_line(col="gray") +
geom_point() +
geom_line(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1),  col="blue") +
geom_point(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1)) +
geom_text(data=cup2,aes(label=paste(Win, "%") ), vjust=2.3, color="gray", size=3.5)+
geom_text(data=cup2,
aes(x= reorder(TEAM, -new) , y=new, size=18),
label=paste(new, "%"), vjust=-1.6, color="blue", size=3.5)+
geom_flag(data=cup2, aes(x = reorder(TEAM, -Win) , y=-7, country = code), size=15) +
theme_ipsum(grid = F, base_family = "sans") +
labs(subtitle = "Datos: Soccer Power Index (SPI)") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 25,
yend = 25),
size = 4,
col = "blue") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 23,
yend = 23),
size = 4,
col = "gray") +
annotate("text", x = "Germany", y = 23, label = "Predicción antes de comenzar el mundial  ") +
annotate("text", x = "Germany", y = 25, label = "Predicción actual (Jue 1 dic 22:18 GTM+1)")
ggplot(data=cup2, aes(x= reorder(TEAM, -Win) , y=Win, group=1)) +
ggtitle("Winning the 2022 World Cup (Top 10 favourites)") +
xlab("Country") +
ylab("Percentage") +
geom_line(col="gray") +
geom_point() +
geom_line(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1),  col="blue") +
geom_point(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1)) +
geom_text(data=cup2,aes(label=paste(Win, "%") ), vjust=2.3, color="gray", size=3.5)+
geom_text(data=cup2,
aes(x= reorder(TEAM, -new) , y=new, size=18),
label=paste(new, "%"), vjust=-1.6, color="blue", size=3.5)+
geom_flag(data=cup2, aes(x = reorder(TEAM, -Win) , y=-7, country = code), size=15) +
theme_ipsum(grid = F, base_family = "sans") +
labs(subtitle = "Data: Soccer Power Index (SPI)") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 25,
yend = 25),
size = 4,
col = "blue") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 23,
yend = 23),
size = 4,
col = "gray") +
annotate("text", x = "Germany", y = 23, label = "Prediction before the start of the World Cup  ") +
annotate("text", x = "Germany", y = 25, label = "Current forecast (Thu 1 Dec 22:18 GMT+1)")
ggplot(data=cup2, aes(x= reorder(TEAM, -Win) , y=Win, group=1)) +
ggtitle("Winning the 2022 World Cup (Top 10 favourites)") +
xlab("Country") +
ylab("Percentage") +
geom_line(col="gray") +
geom_point() +
geom_line(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1),  col="blue") +
geom_point(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1)) +
geom_text(data=cup2,aes(label=paste(Win, "%") ), vjust=2.3, color="gray", size=3.5)+
geom_text(data=cup2,
aes(x= reorder(TEAM, -new) , y=new, size=18),
label=paste(new, "%"), vjust=-1.6, color="blue", size=3.5)+
geom_flag(data=cup2, aes(x = reorder(TEAM, -Win) , y=-7, country = code), size=15) +
theme_ipsum(grid = F, base_family = "sans") +
labs(subtitle = "Data: Soccer Power Index (SPI)") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 25,
yend = 25),
size = 4,
col = "blue") +
geom_segment(aes(x="France",
xend = "Argentina",
y = 23,
yend = 23),
size = 4,
col = "gray") +
annotate("text", x = "Germany", y = 23, label = "Prediction before the start of the World Cup") +
annotate("text", x = "Germany", y = 25, label = "Current forecast (Thu 1 Dec 22:18 GMT+1)")
setwd("/Users/fv/Documents/R/ABRIL_2023/ve_relieve")
library("rvest")
library('sf')
library("ggplot2")
library("tmap")
library("dplyr")
url <- "https://es.wikipedia.org/wiki/Anexo:Municipios_de_Venezuela_por_poblaci%C3%B3n_y_%C3%A1rea"
df <- url %>%
read_html() %>%
#html_element(".table.wikitable") %>%
#html_nodes(xpath='.mw-made-collapsible') %>%
html_table()
library("rvest")
library('sf')
library("ggplot2")
library("tmap")
library("dplyr")
url <- "https://es.wikipedia.org/wiki/Anexo:Municipios_de_Venezuela_por_poblaci%C3%B3n_y_%C3%A1rea"
df <- url %>%
read_html() %>%
#html_element(".table.wikitable") %>%
#html_nodes(xpath='.mw-made-collapsible') %>%
html_table()
df1 <- df[[2]]
df1 <- df1[-1,]
df2 <- df[[3]]
df2 <- df2[-1,]
df3 <- df[[4]]
df3 <- df3[-1,]
df4 <- df[[5]]
df4 <- df4[-1,]
data <- rbind(df1,df2,df3,df4)
names (data)[5] = "Población"
names (data)[4] = "Estado"
data1 <- dplyr::filter(data, Estado=="Mérida")
library("stringr")
data1$Población <- str_replace_all(data1$Población,"\\s","")
data1$Población <- as.numeric(data1$Población)
map <- sf::read_sf('municipios/Municipios_Venezuela.shp')
map <- filter(map, ESTADO=="Mérida")
map <- map%>%
rename(Municipio=MUNICIPIO)
map <- map %>%
st_as_sf()
arg <- merge(map, data1, by="Municipio")
library("rvest")
library('sf')
library("ggplot2")
library("tmap")
library("dplyr")
names(map)
map <- sf::read_sf('Venezuela_Relieve.shp', options = "ENCODING=UTF8")
map2 <- map %>%
st_as_sf()
library(ggnewscale)
library(magrittr)
new_scale <- function(new_aes) {
structure(ggplot2::standardise_aes_names(new_aes), class = "new_aes")
}
arg$Capital <- gsub("Santa Cruz de Mora","Santa Cruz",arg$Capital)
arg$Capital <- gsub("Santa Elena de Arenales","Santa Elena",arg$Capital)
arg$Capital <- gsub("Santa María de Caparo","Santa María",arg$Capital)
arg$Capital <- gsub("Nueva Bolivia","N. Bolivia",arg$Capital)
arg$Capital <- gsub("Santo Domingo","Sto. Domingo",arg$Capital)
arg$Capital <- gsub("Pueblo Llano","P. Llano",arg$Capital)
arg <- arg %>%
st_as_sf()
Latitude  <- c(8.541703054366687)
Longitude <- c(-71.04643498278226)
dd <- cbind(Longitude,Latitude)
dd <- as.data.frame(dd)
geocode3 <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
Latitude  <- c(8.58222671556035)
Longitude <- c(-71.17035165170344)
dd <- cbind(Longitude,Latitude)
dd <- as.data.frame(dd)
geocode4 <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
Latitude  <- c(8.549462747945606)
Longitude <- c(-70.99583329559486)
dd <- cbind(Longitude,Latitude)
dd <- as.data.frame(dd)
humbolt <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
Latitude  <- c(8.52941511864418)
Longitude <- c(-71.09138899996957)
dd <- cbind(Longitude,Latitude)
dd <- as.data.frame(dd)
toro <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
# Táchira
Latitude  <- c(7.959781065765372, 7.5, 9.238377365943881, 9.290294694552877, 9.44002915698867, 7.28)
Longitude <- c(-72.06283527024073, -70.6665043767572, -72.3326351985961, -70.44181671729321, -71.48407131476853, -71.42)
Name <- c("Táchira","Barinas", "Zulia", "Trujillo", "Lago de \nMaracaibo", "Coordillera de Los Andes")
dd <- cbind(Longitude,Latitude, Name)
dd <- as.data.frame(dd)
tachira <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
map2 <- map2 %>%
mutate("Altitud" = Valor)
df <- data.frame(x1 = c(-70.99583329559486, -71.04647787849542, -71.09138899996957),
x2 = c(-70.5, -70.5, -70.5),
y1 = c(8.549462747945606, 8.541151929505485, 8.52941511864418),
y2 = c(8.2, 8, 7.8))
# Táchira
Latitude  <- c( 8.2, 8, 7.8)
Longitude <- c( -70.5, -70.5, -70.5 )
Name <- c("Pico Humbolt\n4.925 m s. n. m.","Pico Bolívar \n4.978 m s. n. m.", "Pico El Toro\n4755 m s. n. m.")
dd <- cbind(Longitude,Latitude, Name)
dd <- as.data.frame(dd)
picos <- st_as_sf(dd, coords = c("Longitude", "Latitude"), crs = 4326)
ggplot() +
ggtitle("Mérida, Venezuela \n") +
xlab("") +
ylab("") +
xlim(-72.6,-70 ) +
ylim(7.1,9.5) +
geom_sf(data = map2, aes(fill= Altitud) , show.legend = T, size = 0.00001, color=NA ) +
scale_fill_gradient2(low = "yellow", high = "#6b3027") +
new_scale("fill") +
geom_sf(data=arg, aes(fill= Población ) , show.legend = T, size = 0.00001, color="white", alpha=.5) +
# scale_fill_gradient2(low = "#D4E7DC",  mid = "#D4E7DC" ,high = "#02441E") +
scale_fill_viridis_c(alpha = .5, direction = -1, option = "plasma") +
geom_sf(data = geocode3, pch = 19, size=1.5, color = "white") +
# geom_sf(data = geocode4, pch = 19, size=2, color = "green") +
geom_sf(data = humbolt, pch = 19, size=1.5, color = "white") +
geom_sf(data = toro, pch = 19, size=1.5, color = "white") +
geom_sf_text(data= st_centroid(arg), aes(label =Capital),size=3) +
geom_sf_text(data= st_centroid(tachira), aes(label =Name), size=5) +
geom_sf_text(data= st_centroid(picos), aes(label =Name), size=3, hjust=0) +
geom_curve(aes(x = x1, y = y1, xend = x2, yend = y2), curvature = -0.2, lwd = .3, data = df) +
geom_segment(aes(x = -71.25,
y = 7.35,
xend = -71.60,
yend = 7.35),
linewidth = 2,
show.legend = NA,
col = "#7b4e44") +
theme(
plot.background=element_rect(fill="#EBEBEB", color="#EBEBEB"),
panel.background = element_blank(),
legend.background = element_rect(fill="#EBEBEB",
size=0.5, linetype="solid"),
panel.grid = element_line(color="#EBEBEB"),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.text.x = element_blank(),
axis.title.y=element_blank(),
axis.text.y = element_blank(),
plot.title = element_text(size = 24, hjust = 1, face = "bold"),
plot.subtitle = element_text(size = 20)
)
setwd("/Users/fv/Documents/R/ABRIL_2023/UK")
Enf <- c("Enfermedades cardiovasculares", "Enfermedades pulmonares", "Diabetes", "Hipertensión",
"Enfermedad renal", "Enfermedades autoinmunes, \nendocrinas y metabólicas",
"Enfermedad neurológica", "Otras enfermedades")
data <- data.frame(Freq=c(0 ,0 , 0, 0, 0, 0, 0, 9.1, 0, 3.4, 0, 0, 0, 0, 1.7,
0, 3.4, 4.3, 3.9, 3, 0.8, 1.4, 1.3, 1.6, 14.2, 3.1,
17, 8, 1.7, 4.5, 1.7, 2.8, 30.6, 9.9, 25.2, 13.5,
4.5, 6.3, 1.8, 3.6),
Age=c(rep("0-4", 8), rep("5-17", 8), rep("18-49", 8),
rep("50-64", 8), rep("65+", 8)),
Cond_pre = rep(Enf, 5))
ggplot(subset(data, Freq > 0),
aes(x = Cond_pre, y = Freq, fill = Cond_pre)) +
geom_col() +
facet_grid(~Age, space = "free_x", scales = "free_x", switch = "x") +
scale_x_discrete(name = "Edad", expand = c(0, 1)) +
ylab("Porcentaje de condición preexistente\n") +
scale_fill_manual(values = c("#d53e4f", "#f46d43", "#fdae61", "#fee08b",
"#abdda4", "#66c2a5", "#3288bd", "#9970ab")) +
labs(title="\nPorcentaje de condición preexistente",
subtitle = "",
caption = "Datos: Anónimo (2023)\n",
fill= "Condición preexistente") +
theme(
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
legend.position = c(.42, .90),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
plot.title = element_text(size = 20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face="bold", hjust = 0.5),
plot.caption = element_text(size = 10, face="bold", hjust = 1),
panel.background = element_rect(fill = "white", colour = "white")
)
setwd("/Users/fv/Documents/R/ABRIL_2023/British Virgin Islands UPDATE")
library("marmap")
library("dplyr")
library("readxl")
library("sf")
library("ggplot2")
library("marmap")
library("dplyr")
library("readxl")
library("sf")
library("ggplot2")
# MARMAP
CAbig <- getNOAA.bathy(-125, -115, 30, 45, resolution = 1)
# EXCEL
UrchinDataCA <- read_excel("UrchinDataCA.xlsx")
UrchinDataCA[is.na(UrchinDataCA)] <- 0
A <- filter(UrchinDataCA, MPA_REF=="mpa")
B <- filter(UrchinDataCA, MPA_REF=="reference")
ll <- (UrchinDataCA$STRPURAD)
dd <- (max(ll)/60 - min(ll)/60 )/5
# POINTS
points = st_as_sf(UrchinDataCA, coords=c("long", "lat"))
points <- points %>%
st_set_crs(4326)
points <- st_transform(points, 4326)
# PLOT GGPLOT2
ggplot(CAbig, aes(x=x, y=y)) +
coord_quickmap() +
geom_raster(aes(fill=z), show.legend = F, alpha=.6) +
scale_fill_etopo() +
geom_contour(aes(z=z), breaks=c(0, -10, -20, -50, -100, -200, -1000,
0, 10, 20, 50, 100, 200, 1000), colour="grey", size=0.2) +
geom_point(data=UrchinDataCA, aes(x=long, y=lat, color = MPA_REF,
shape = MPA_REF,
size= (STRPURAD)*0.01),
group = UrchinDataCA$MPA_REF, alpha =.6) +
# MANUAL
scale_size(range = c(3,12), breaks = c(5,10,20,30),
labels =  c(paste("<", round(dd*2,1) ),
paste( round(dd*2,1) ,"-", round(dd*3,1) ),
paste( round(dd*3,1) ,"-", round(dd*4,1) ),
paste(">", round(dd*4,1) ))) +
scale_shape_manual(values = c(16, 19))+
scale_color_manual(values = c('#e41a1c', '#377eb8'))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
xlab("Long") +
ylab("Lat")+
ggtitle("Title") +
labs(color = c("MPA_REF")) +
labs(size = c("STRPURAD")) +
guides(shape = FALSE) +
theme(text = element_text(size = 14, face = "bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
plot.title = element_text(size = 20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face="bold", hjust = 0.5),
plot.caption = element_text(size = 10, face="bold", hjust = 1),
panel.background = element_rect(fill = "white", colour = "white")) +
guides(colour = guide_legend(title = "MPA_REF", face="bold"))
# PLOT GGPLOT2
ggplot(CAbig, aes(x=x, y=y)) +
coord_quickmap() +
geom_raster(aes(fill=z), show.legend = F, alpha=.6) +
scale_fill_etopo() +
geom_contour(aes(z=z), breaks=c(0, -10, -20, -50, -100, -200, -1000,
0, 10, 20, 50, 100, 200, 1000), colour="grey", size=0.2) +
geom_point(data=UrchinDataCA, aes(x=long, y=lat, color = MPA_REF,
shape = MPA_REF,
size= (STRPURAD)*0.01),
group = UrchinDataCA$MPA_REF, alpha =.6) +
scale_size(range = c(3,12), breaks = c(5,10,20,30),
labels =  c(paste("0"),
paste( round(dd*2,1) ,"-", round(dd*3,1) ),
paste( round(dd*3,1) ,"-", round(dd*4,1) ),
paste(">", round(dd*4,1) ))) +
scale_shape_manual(values = c(16, 19))+
scale_color_manual(values = c('#e41a1c', '#377eb8'))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
xlab("Long") +
ylab("Lat")+
ggtitle("Title") +
labs(color = c("MPA_REF")) +
labs(size = c("STRPURAD")) +
guides(shape = FALSE) +
theme(text = element_text(size = 14, face = "bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
plot.title = element_text(size = 20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face="bold", hjust = 0.5),
plot.caption = element_text(size = 10, face="bold", hjust = 1),
panel.background = element_rect(fill = "white", colour = "white")) +
guides(colour = guide_legend(title = "MPA_REF", face="bold"))
ggplot(CAbig, aes(x=x, y=y)) +
coord_quickmap() +
geom_raster(aes(fill=z), show.legend = F, alpha=.6) +
scale_fill_etopo() +
geom_contour(aes(z=z), breaks=c(0, -10, -20, -50, -100, -200, -1000,
0, 10, 20, 50, 100, 200, 1000), colour="grey", size=0.2) +
geom_point(data=A, aes(x=long, y=lat, color = MPA_REF,
shape = MPA_REF,
size= (STRPURAD)*0.01),
group = A$MPA_REF, alpha =.6) +
# MANUAL
scale_size(range = c(3,12), breaks = c(5,10,20,30),
labels =  c(paste("0" ),
paste( round(dd*2,1) ,"-", round(dd*3,1) ),
paste( round(dd*3,1) ,"-", round(dd*4,1) ),
paste(">", round(dd*4,1) ))) +
scale_shape_manual(values = c(16, 19))+
scale_color_manual(values = c('#e41a1c','#377eb8'))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
xlab("Long") +
ylab("Lat")+
ggtitle("Title") +
labs(color = c("MPA_REF")) +
labs(size = c("STRPURAD")) +
guides(shape = FALSE) +
theme(text = element_text(size = 14, face = "bold"),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
plot.title = element_text(size = 20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face="bold", hjust = 0.5),
plot.caption = element_text(size = 10, face="bold", hjust = 1),
panel.background = element_rect(fill = "white", colour = "white")) +
guides(colour = guide_legend(title = "MPA_REF", face="bold"))
setwd("/Users/fv/Desktop/Towers")
library(tidyverse)
library(ggtextures)
library(magick)
library(ggflags)
library(tidyverse)
library(ggtextures)
library(magick)
library(ggflags)
data <- tibble(
count = c(1,1,1,1,1,1),
n = c(634,600,553,540,468,435),
country =c("Japan","China","Canada","Russia","China","Iran"),
code =c("jp","cn","ca","ru","cn","ir"),
animal = c("Tokyo Sky Tree",
"Torre de Televisión\nde Cantón",
"CN Tower",
"Torre Ostankino",
"Torre Perla Oriental",
"Torre Milad"),
image = list(
image_read_svg("images/b_01.svg"),
image_read_svg("images/b_02.svg"),
image_read_svg("images/b_03.svg"),
image_read_svg("images/b_04.svg"),
image_read_svg("images/b_06.svg"),
image_read_svg("images/b_08.svg")
)
)
data <- data %>%
mutate(iso3 = countrycode::countrycode(country,
origin = "country.name.en",
destination = "iso3c"))
# PLOT
ggplot(data, aes(x=reorder(animal,-n), count, image = image)) +
geom_isotype_col() + xlab("") + ylab("")+
labs(title="\nTorres más altas de mundo", subtitle = "\n",
caption = "\n", fill= "Districts") +
geom_flag(aes(x=reorder(animal,-n),  y= -.05,
country=code), size=15 ) +
geom_segment(aes(x = 0, y = (.95), xend = "Torre Milad", yend = (.95)), alpha=.05) +
geom_segment(aes(x = 0, y = ((600*0.95)/634), xend = "Torre Milad", yend = ((600*0.95)/634)), alpha=.05) +
geom_segment(aes(x = 0, y = ((553*0.95)/634), xend = "Torre Milad", yend = ((553*0.95)/634)), alpha=.05) +
geom_segment(aes(x = 0, y = ((540*0.95)/634), xend = "Torre Milad", yend = ((540*0.95)/634)), alpha=.05) +
geom_segment(aes(x = 0, y = ((468*0.95)/634), xend = "Torre Milad", yend = ((468*0.95)/634)), alpha=.05) +
geom_segment(aes(x = 0, y = ((435*0.95)/634), xend = "Torre Milad", yend = ((435*0.95)/634)), alpha=.05) +
annotate(x = .15, y = (1), "text", label= "(m)", fontface =2) +
annotate(x = .15, y = (.96), "text", label= "634", fontface =2) +
annotate(x = .15, y = ((600*0.95)/634) + 0.01, "text", label= "600", fontface =2) +
annotate(x = .15, y = ((553*0.95)/634) + 0.01, "text", label= "553", fontface =2) +
annotate(x = .15, y = ((540*0.95)/634) + 0.01, "text", label= "540", fontface =2) +
annotate(x = .15, y = ((468*0.95)/634) + 0.01, "text", label= "468", fontface =2) +
annotate(x = .15, y = ((435*0.95)/634) + 0.01, "text", label= "435", fontface =2) +
theme(text = element_text(size = 14, face = "bold"),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.spacing = unit(0, "pt"),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
strip.background = element_blank(),
strip.text = element_text(colour = "black"),
plot.title = element_text(size = 20, face="bold", hjust = 0.5),
plot.subtitle = element_text(size = 16, face="bold", hjust = 0.5),
plot.caption = element_text(size = 10, face="bold", hjust = 1),
panel.background = element_rect(fill = "white", colour = "white")) +
guides(colour = guide_legend(title = "Location type", face="bold",
override.aes = list(size=6,linetype=0)))
