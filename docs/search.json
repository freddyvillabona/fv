[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#dreams",
    "href": "index.html#dreams",
    "title": "Freddy Villabona",
    "section": "%>% Dreams",
    "text": "%>% Dreams\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "programandoenr.html",
    "href": "programandoenr.html",
    "title": "programandoenR",
    "section": "",
    "text": "Contours with ggplot2\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nPercentage of Russian speakers in Ukraine\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nggplot2\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 27, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nCO2 emissions, GDP per capita and population by country - 2020\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2022\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "fv/about.html",
    "href": "fv/about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "fv/index.html",
    "href": "fv/index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n\n\n# :)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/emissions/index.html",
    "href": "posts/emissions/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nplot <- ggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, \n                          pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n# plot\n# :)"
  },
  {
    "objectID": "posts/notes_ggplot2/index.html",
    "href": "posts/notes_ggplot2/index.html",
    "title": "ggplot2",
    "section": "",
    "text": "Qualification of a university student in their last 7 semesters. 🇨🇭\n\n{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c\n\n\nQualification of a university student in their last 7 semesters. 🇨🇭 🇨🇭\nWorking with the libraries: “ggplot2”, “dplyr”, “hrbrthemes”, “viridis”, “readxl” and “patchwork”.\n- In Switzerland the maximum rating is 6 and the minimum 1.\n- Customised details in the colour palette and caption."
  },
  {
    "objectID": "posts/Ukraine_map_ggplot2/index.html",
    "href": "posts/Ukraine_map_ggplot2/index.html",
    "title": "Percentage of Russian speakers in Ukraine",
    "section": "",
    "text": "Working with the libraries: “sf”, “stringr”, “dplyr”, “ggplot2” and “ggthemes”. 🇺🇦\n\n# lIB\n\n{\nlibrary('sf')\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"stringr\")\n}\n\nru <- read_sf('ruso/Ruso_Parlantes_Ucrania.shp')\n\nru <- ru %>% \n  st_as_sf()\n\nA <- ggplot(data = ru) +\n  ggtitle(\"Україна - Відсоток російськомовних\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6) +\n  geom_sf_text(aes(label =Ucraniano),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 16),\n        plot.subtitle = element_text(size = 20)) +\n  labs(fill= \"Відсоток\")\n\nA\n\n\n\nlibrary(\"ggspatial\")\n\nru$Español <- gsub(\"Ciudad de Kiev\",\"Kiev \",ru$Español)\nru$Español <- gsub(\"República Autónoma de Crimea\",\"Crimea\",ru$Español)\n\nes <- ggplot(data = ru) +\n  ggtitle(\"Percentage of Russian speakers in Ukraine\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6, direction = -1) +\n  geom_sf_text(aes(label =Español),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        plot.subtitle = element_text(size = 20),\n        legend.position=\"bottom\") +\n  labs(fill= \"%\") +\n  annotation_scale()\n\nes \n\n\n\n\nShapefile layers 2019 Data: gov.uk"
  },
  {
    "objectID": "posts/Contornos/index.html",
    "href": "posts/Contornos/index.html",
    "title": "Contours with ggplot2",
    "section": "",
    "text": "This is a post with executable code.\n\nlibrary(\"ggplot2\")\n\nsegmentos = data.frame(\n  x= c(1.5, 1.5, 1.5),\n  xend = c(1.7, 1.7, 1.7),\n  y = c(90, 93, 96), \n  yend = c(90, 93, 96))\n\nsegmentos2 = data.frame(\n  y = c(50,50,50), \n  yend = c(50,50,50),\n  x= c(4, 4.5, 5),\n  xend = c(4.5, 5, 5.5))\n\nlista <- colorRampPalette(c(\"white\", \"blue\", \"red\"))(75)\n\n  ggplot(faithful, aes(x = eruptions, y = waiting)) +\n    geom_point(size=.5) +\n    xlim(0.5, 6) +\n    ylim(40, 110) +\n    geom_density_2d_filled(alpha = 0.8, bins=75) +\n    scale_fill_manual(values = lista) +\n    \n    geom_segment(data=segmentos, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=5) +\n    geom_segment(data=segmentos2, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=3) +\n    geom_text(mapping=aes(label=\"Contornos con ggplot2\", y=(110), x=3), size=6, color=\"black\", fontface=\"bold\") +\n    \n    geom_text(mapping=aes(label=\"C\", y=(90), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"B\", y=(93), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"A\", y=(96), x=1.8), size=3, color=\"black\") +\n    \n    geom_text(mapping=aes(label=\"0\", y=(48), x=4), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.00972\", y=(48), x=4.75), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.01944\", y=(48), x=5.35), size=3, color=\"black\") +\n  \n    theme(\n      legend.position = \"none\",\n      plot.background=element_rect(fill=\"white\", color=\"white\"),\n      panel.background = element_rect(fill=\"white\", color=\"white\"),\n      axis.ticks=element_blank(),\n      axis.title.x=element_blank(),\n      axis.text.x = element_blank(),\n      axis.title.y=element_blank(),\n      axis.text.y = element_blank()\n    )"
  }
]