[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#dreams",
    "href": "index.html#dreams",
    "title": "Freddy Villabona",
    "section": "%>% Dreams",
    "text": "%>% Dreams\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "programandoenr.html",
    "href": "programandoenr.html",
    "title": "programandoenR",
    "section": "",
    "text": "ggplot2\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 27, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nCO2 emissions, GDP per capita and population by country - 2020\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2022\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "fv/about.html",
    "href": "fv/about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "fv/index.html",
    "href": "fv/index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n\n\n# :)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/emissions/index.html",
    "href": "posts/emissions/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nplot <- ggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, \n                          pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n# plot\n# :)"
  },
  {
    "objectID": "posts/notes_ggplot2/index.html",
    "href": "posts/notes_ggplot2/index.html",
    "title": "ggplot2",
    "section": "",
    "text": "{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c"
  }
]