[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fredd Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist at BBVA | Resume\n\n\nProgramandoenR | R Views |\nSyndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#dreams",
    "href": "index.html#dreams",
    "title": "Freddy Villabona",
    "section": "%>% Dreams",
    "text": "%>% Dreams\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "programandoenr.html",
    "href": "programandoenr.html",
    "title": "📊 programandoenR",
    "section": "",
    "text": "Generar n colores con ayuda de la librería unikin\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\ntips\n\n\n\n\n\n\n\n\n\n\n\nMay 31, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nTemperatura media en Copenhague, Dinamarca\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 26, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nTormentas tropicales en el Océano Atlántico\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 18, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nPuntuación por taza de café (CQI)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 21, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nBoxplot (data:diamonds)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 27, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nMonthly sales of an online shop in the UK 🇬🇧\n\n\n\n\n\n\n\ncode\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nMay 1, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nWorld’s tallest towers (Top 6)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nPercentage of Russian speakers in Ukraine 🇺🇦\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nWinning the 2022 World Cup (Top 10 favourites)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nDec 1, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nggplot2 🇨🇭\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 27, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nContours with ggplot2\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nCO2 emissions, GDP per capita and population by country - 2020\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2022\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "fv/about.html",
    "href": "fv/about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "fv/index.html",
    "href": "fv/index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n\n\n# :)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/emissions/index.html",
    "href": "posts/emissions/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nplot <- ggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, \n                          pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n# plot\n# :)"
  },
  {
    "objectID": "posts/notes_ggplot2/index.html",
    "href": "posts/notes_ggplot2/index.html",
    "title": "ggplot2",
    "section": "",
    "text": "Qualification of a university student in their last 7 semesters. 🇨🇭\n\n{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c\n\n\nQualification of a university student in their last 7 semesters. 🇨🇭 🇨🇭\nWorking with the libraries: “ggplot2”, “dplyr”, “hrbrthemes”, “viridis”, “readxl” and “patchwork”.\n- In Switzerland the maximum rating is 6 and the minimum 1.\n- Customised details in the colour palette and caption."
  },
  {
    "objectID": "posts/Ukraine_map_ggplot2/index.html",
    "href": "posts/Ukraine_map_ggplot2/index.html",
    "title": "Percentage of Russian speakers in Ukraine",
    "section": "",
    "text": "Working with the libraries: “sf”, “stringr”, “dplyr”, “ggplot2” and “ggthemes”. 🇺🇦\n\n# lIB\n\n{\nlibrary('sf')\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"stringr\")\n}\n\nru <- read_sf('ruso/Ruso_Parlantes_Ucrania.shp')\n\nru <- ru %>% \n  st_as_sf()\n\nA <- ggplot(data = ru) +\n  ggtitle(\"Україна - Відсоток російськомовних\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6) +\n  geom_sf_text(aes(label =Ucraniano),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 16),\n        plot.subtitle = element_text(size = 20)) +\n  labs(fill= \"Відсоток\")\n\nA\n\n\n\nlibrary(\"ggspatial\")\n\nru$Español <- gsub(\"Ciudad de Kiev\",\"Kiev \",ru$Español)\nru$Español <- gsub(\"República Autónoma de Crimea\",\"Crimea\",ru$Español)\n\nes <- ggplot(data = ru) +\n  ggtitle(\"Percentage of Russian speakers in Ukraine\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6, direction = -1) +\n  geom_sf_text(aes(label =Español),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        plot.subtitle = element_text(size = 20),\n        legend.position=\"bottom\") +\n  labs(fill= \"%\") +\n  annotation_scale()\n\nes \n\n\n\n\nShapefile layers 2019 Data: gov.uk"
  },
  {
    "objectID": "posts/Contornos/index.html",
    "href": "posts/Contornos/index.html",
    "title": "Contours with ggplot2",
    "section": "",
    "text": "This is a post with executable code.\n\nlibrary(\"ggplot2\")\n\nsegmentos = data.frame(\n  x= c(1.5, 1.5, 1.5),\n  xend = c(1.7, 1.7, 1.7),\n  y = c(90, 93, 96), \n  yend = c(90, 93, 96))\n\nsegmentos2 = data.frame(\n  y = c(50,50,50), \n  yend = c(50,50,50),\n  x= c(4, 4.5, 5),\n  xend = c(4.5, 5, 5.5))\n\nlista <- colorRampPalette(c(\"white\", \"blue\", \"red\"))(75)\n\n  ggplot(faithful, aes(x = eruptions, y = waiting)) +\n    geom_point(size=.5) +\n    xlim(0.5, 6) +\n    ylim(40, 110) +\n    geom_density_2d_filled(alpha = 0.8, bins=75) +\n    scale_fill_manual(values = lista) +\n    \n    geom_segment(data=segmentos, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=5) +\n    geom_segment(data=segmentos2, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=3) +\n    geom_text(mapping=aes(label=\"Contornos con ggplot2\", y=(110), x=3), size=6, color=\"black\", fontface=\"bold\") +\n    \n    geom_text(mapping=aes(label=\"C\", y=(90), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"B\", y=(93), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"A\", y=(96), x=1.8), size=3, color=\"black\") +\n    \n    geom_text(mapping=aes(label=\"0\", y=(48), x=4), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.00972\", y=(48), x=4.75), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.01944\", y=(48), x=5.35), size=3, color=\"black\") +\n  \n    theme(\n      legend.position = \"none\",\n      plot.background=element_rect(fill=\"white\", color=\"white\"),\n      panel.background = element_rect(fill=\"white\", color=\"white\"),\n      axis.ticks=element_blank(),\n      axis.title.x=element_blank(),\n      axis.text.x = element_blank(),\n      axis.title.y=element_blank(),\n      axis.text.y = element_blank()\n    )"
  },
  {
    "objectID": "posts/map_UK/index.html",
    "href": "posts/map_UK/index.html",
    "title": "Monthly sales of an online shop in the UK 🇬🇧",
    "section": "",
    "text": "Map of the United Kingdom drawn from a shapefile layer. This is a post with executable code.\n\n# LIB\n\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"sf\")\nlibrary(\"ggtext\")\n\n# UK SHAPEFILE\nuk <- read_sf('uk/uk_shapefile.shp')\nuk <- uk %>% \n  st_as_sf()\n\n# DATA (CSV)\ndata <- read.csv2(\"data.csv\")\n\n# (SHAPEFILE AND DATOS)\nmap_uk <- merge(uk, data, by = \"Region\")\nmap_uk <- map_uk %>% \n  st_as_sf()\n\n# COLORS\npal <- colorRampPalette(c(\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \n           \"#41b6c4\", \"#2c7fb8\"))(12)\n\n# MAP1\n\n ggplot(data = map_uk) +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=Mean), show.legend = T, size = 0.05, lwd = 0) +\n  scale_fill_gradientn(colours = pal) +\n  geom_sf_text(aes(label =Region),size=2.5, colour=\"black\")+\n   theme(plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n         plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n         plot.caption = element_text(size = 10, face=\"bold\", hjust = 1)) +\n   labs(title=\"Sales per month \", \n        subtitle = \"\\nUK\",\n        caption = \"Data: uml - 2023\",\n        fill= \"Ventas\") \n\n\n\n# MAP2\n \n ggplot(data = map_uk) +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=Mean), show.legend = T, size = 0.05, lwd = 0) +\n  scale_fill_gradientn(colours = pal) +\n  geom_sf_text(aes(label =Region),size=2.5, colour=\"black\")+\n  theme_void() +\n   theme(plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n         plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n         plot.caption = element_text(size = 10, face=\"bold\", hjust = 1)) +\n   labs(title=\"Sales per month \", \n        subtitle = \"\\nUK\",\n        caption = \"Data: uml - 2023\",\n        fill= \"Ventas\")"
  },
  {
    "objectID": "posts/leaflet/index.html",
    "href": "posts/leaflet/index.html",
    "title": "Monthly sales of an online shop in the UK 🇬🇧",
    "section": "",
    "text": "Map of the United Kingdom drawn from a shapefile layer. This is a post with executable code.\n# LIB\n\n{\nlibrary(\"readxl\")\nlibrary(\"leaflet\")\nlibrary(\"leafem\")\n}\n\nlogo <- \"https://www.r-project.org/logo/Rlogo.svg\"\n\ndata <- read_excel(\"dat.xlsx\")\nd <- 1\n\nicons <- awesomeIcons(\n  icon = \"beer\",\n  iconColor = 'black',\n  library = 'ion'\n)\n\n\nmap <- leaflet(data) %>% \n#  addTiles() %>%\n  \n  # Base groups\n  addTiles(group = \"OSM (default)\") %>%\n#  addProviderTiles(providers$Stamen.TonerLite, group = \"Toner Lite\") %>%\n  \n  addCircles(lng = ~data$long, \n             lat = ~data$lat, \n             weight = 8, \n             color=\"red\",\n             radius = ~d, \n             popup = ~data$text, \n             label = ~data$text, \n             group=\"Location\") %>%\n  \n  addAwesomeMarkers(lng = ~data$long, \n                    lat = ~data$lat,icon=icons,\n                    label = ~data$text,\n                    group=\"Location\") %>%\n  \n  # Layers control\n  addLayersControl(\n    baseGroups = c(\"Toner Lite\", \"OSM (default)\"),\n    overlayGroups = c(\"Location\"),\n    options = layersControlOptions(collapsed = FALSE))  %>%\n # addScaleBar() %>%\n#  addMouseCoordinates() %>%\n  addLogo(logo, url = \"https://www.r-project.org/logo/\")\n\nmap"
  },
  {
    "objectID": "posts/World_Cup/index.html",
    "href": "posts/World_Cup/index.html",
    "title": "Winning the 2022 World Cup (Top 10 favourites)",
    "section": "",
    "text": "Winning the 2022 World Cup\n- The grey line shows the predictions before the start of the World Cup.\n- The blue line shows the current predictions.\n\n# LIB\n{\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggflags)\nlibrary(stringr)\nlibrary(hrbrthemes)\n}\n\n# DATA\ncup <- read.csv(\"cup.csv\", sep=\";\", stringsAsFactors = FALSE)\ncup <- cup[with(cup, order(-cup$WIN.WORLD.CUP)), ] \n\n# ORDER\ncup$TEAM <- gsub(\"\\n\",\"\",cup$TEAM)\ncup$TEAM <- gsub(\" \",\"\",cup$TEAM)\ncup$TEAM <- str_replace_all(cup$TEAM,\" \", \"\")  \ncup$TEAM\n\n [1] \"Brazil\"      \"Spain\"       \"France\"      \"Argentina\"   \"Portugal\"   \n [6] \"Germany\"     \"England\"     \"Netherlands\" \"Uruguay\"     \"Belgium\"    \n[11] \"Denmark\"     \"Croatia\"     \"Switzerland\" \"USA\"         \"Mexico\"     \n[16] \"Senegal\"     \"Ecuador\"     \"Morocco\"     \"Serbia\"      \"Japan\"      \n[21] \"Canada\"      \"Poland\"      \"SouthKorea\"  \"Tunisia\"     \"Iran\"       \n[26] \"Wales\"       \"Cameroon\"    \"SaudiArabia\" \"Australia\"   \"Qatar\"      \n[31] \"Ghana\"       \"CostaRica\"  \n\ncup <- head(cup,10)\nnames(cup)[12] = \"Win\"\n\n\nnew <- c(29.10, 12.00, 12.80, \n         12.90, 8.10, 0, \n         9.40, 6.00, 1.10, 0)\n\ncup2 <- cbind(cup, new)\n\n#PLOT\n\nplot <- ggplot(data=cup2, aes(x= reorder(TEAM, -Win) , y=Win, group=1)) +\n  ggtitle(\"Winning the 2022 World Cup (Top 10 favourites)\") +\n  xlab(\"Country\") +\n  ylab(\"Percentage\") +\n  \n  geom_line(col=\"gray\") +\n  geom_point() +\n  \n  geom_line(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1),  col=\"blue\") +\n  geom_point(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1)) +\n  \n  geom_text(data=cup2,aes(label=paste(Win, \"%\") ), vjust=2.3, color=\"gray\", size=3.5)+\n  geom_text(data=cup2, \n            aes(x= reorder(TEAM, -new) , y=new, size=18),\n            label=paste(new, \"%\"), vjust=-1.6, color=\"blue\", size=3.5)+\n  geom_flag(data=cup2, aes(x = reorder(TEAM, -Win) , y=-7, country = code), size=15) +\n  theme_ipsum(grid = F, base_family = \"sans\") +\n  labs(subtitle = \"Data: Soccer Power Index (SPI)\") +\n  \n  geom_segment(aes(x=\"France\",\n                   xend = \"Argentina\", \n                   y = 25,\n                   yend = 25),\n               size = 4, \n               col = \"blue\") +\n  \n  geom_segment(aes(x=\"France\",\n                   xend = \"Argentina\", \n                   y = 23,\n                   yend = 23),\n               size = 4,\n               col = \"gray\") +\n  \n  annotate(\"text\", x = \"Germany\", y = 23, label = \"Prediction before the start of the World Cup\") +\n  annotate(\"text\", x = \"Germany\", y = 25, label = \"Current forecast (Thu 1 Dec 22:18 GMT+1)\")\n\n# plot"
  },
  {
    "objectID": "posts/Towers/index.html",
    "href": "posts/Towers/index.html",
    "title": "World’s tallest towers (Top 6)",
    "section": "",
    "text": "World’s tallest towers (Top 6)\n\n# LIB\n\n{\nlibrary(tidyverse)\nlibrary(ggtextures)\nlibrary(magick)\nlibrary(ggflags)\n}\n\n# DATA\n\ndata <- tibble(\n  count = c(1,1,1,1,1,1),\n  n = c(634,600,553,540,468,435),\n  country =c(\"Japan\",\"China\",\"Canada\",\"Russia\",\"China\",\"Iran\"),\n  code =c(\"jp\",\"cn\",\"ca\",\"ru\",\"cn\",\"ir\"),\n  animal = c(\"Tokyo Sky Tree\", \n             \"Torre de Televisión\\nde Cantón\",\n             \"CN Tower\",\n             \"Torre Ostankino\", \n             \"Torre Perla Oriental\", \n             \"Torre Milad\"),\n  image = list(\n    image_read_svg(\"images/b_01.svg\"),\n    image_read_svg(\"images/b_02.svg\"),\n    image_read_svg(\"images/b_03.svg\"),\n    image_read_svg(\"images/b_04.svg\"),\n    image_read_svg(\"images/b_06.svg\"),\n    image_read_svg(\"images/b_08.svg\")\n  )\n)\n\n\ndata <- data %>%\n  mutate(iso3 = countrycode::countrycode(country,\n                                               origin = \"country.name.en\",\n                                               destination = \"iso3c\"))\n\n\n# PLOT\nplot <- ggplot(data, aes(x=reorder(animal,-n), count, image = image)) +\n  geom_isotype_col() + xlab(\"\") + ylab(\"\")+\n  labs(title=\"\\nTorres más altas de mundo\", subtitle = \"\\n\",\n       caption = \"\\n\", fill= \"Districts\") +\n  geom_flag(aes(x=reorder(animal,-n),  y= -.05,\n                country=code), size=15 ) +\n  \n  geom_segment(aes(x = 0, y = (.95), xend = \"Torre Milad\", yend = (.95)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((600*0.95)/634), xend = \"Torre Milad\", yend = ((600*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((553*0.95)/634), xend = \"Torre Milad\", yend = ((553*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((540*0.95)/634), xend = \"Torre Milad\", yend = ((540*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((468*0.95)/634), xend = \"Torre Milad\", yend = ((468*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((435*0.95)/634), xend = \"Torre Milad\", yend = ((435*0.95)/634)), alpha=.05) +\n\n  annotate(x = .15, y = (1), \"text\", label= \"(m)\", fontface =2) +\n  annotate(x = .15, y = (.96), \"text\", label= \"634\", fontface =2) +\n  annotate(x = .15, y = ((600*0.95)/634) + 0.01, \"text\", label= \"600\", fontface =2) +\n  annotate(x = .15, y = ((553*0.95)/634) + 0.01, \"text\", label= \"553\", fontface =2) +\n  annotate(x = .15, y = ((540*0.95)/634) + 0.01, \"text\", label= \"540\", fontface =2) +\n  annotate(x = .15, y = ((468*0.95)/634) + 0.01, \"text\", label= \"468\", fontface =2) +\n  annotate(x = .15, y = ((435*0.95)/634) + 0.01, \"text\", label= \"435\", fontface =2) +\n \n  theme(text = element_text(size = 14, face = \"bold\"),\n    axis.text.y = element_blank(), \n    axis.ticks.y = element_blank(),\n    panel.spacing = unit(0, \"pt\"),\n    panel.border = element_blank(),\n    panel.grid.major.x = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_text(colour = \"black\"),\n    plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n    plot.caption = element_text(size = 10, face=\"bold\", hjust = 1),\n    panel.background = element_rect(fill = \"white\", colour = \"white\")) +\n    guides(colour = guide_legend(title = \"Location type\", face=\"bold\", \n                               override.aes = list(size=6,linetype=0)))"
  },
  {
    "objectID": "tips.html",
    "href": "tips.html",
    "title": "AV",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "tips/workspace/index.html",
    "href": "tips/workspace/index.html",
    "title": "Workspace",
    "section": "",
    "text": "Video"
  },
  {
    "objectID": "posts/d/index.html",
    "href": "posts/d/index.html",
    "title": "Boxplot (data:diamonds)",
    "section": "",
    "text": "This time we work with diamond data. It generates a diagram of box with “ggplot2”, with various details in the chart that allow better perceive the distribution of data.\n\nlibrary(\"ggplot2\")\ndata(diamonds)\n\n\n  ggplot(data = diamonds, aes(x = cut, y = price)) +\n    scale_fill_manual (values = c(\"#d53e4f\",\n                                \"#f46d43\", \"#66c2a5\", \"#3288bd\", \"#9970ab\")) +\n    scale_color_manual(values = c(\"#d53e4f\", \"#f46d43\",\n                                \"#66c2a5\", \"#3288bd\",\n                                \"#9970ab\")) +\n    geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +\n    geom_violin(aes(fill = cut), alpha = 0.5, color = NA) + \n    geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +\n    xlab(\"\\nCut\") +\n    ylab(\"Price\") +\n    labs(title=\"\\nDiamonds\", subtitle =\"\", caption = \"Data: diamonds\\n\", fill= \"Cut\") +\n    \n    theme(\n      axis.text.x = element_text(size = 12),\n      axis.text.y = element_text (size = 12),\n      axis.title.x = element_text (size = 13, face=\"bold\"),\n      axis.title.y = element_text(size = 13, face=\"bold\"),\n      panel.spacing = unit(0, \"pt\"),\n      panel.border = element_blank(),\n      panel.grid.major.x = element_blank(),\n      strip.background = element_blank(),\n      strip.text = element_text(colour = \"black\"),\n      legend.justification = c(\"right\", \"top\"),\n      legend.box.just = \"right\",\n      legend.margin = margin(6, 6, 6, 6),\n      plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),\n      plot.subtitle = element_text(size = 16, face = \"bold\", hjust = 0.5),\n      plot.caption = element_text(size = 10, face = \"bold\", hjust = 1),\n      panel.background = element_rect(fill=\"white\", colour=\"white\")\n)"
  },
  {
    "objectID": "tips/d/index.html",
    "href": "tips/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\nCentrales de alarmas (Grado 2 y 3)\n\nPrevención ante intrusos\nVideovigilancia\nSistema métrico:\n\n$$1 kJ/kg * ºC = 1 kJ/kg * K = 1 J/g * ºC$$\n\\[1 kJ/kg * ºC = 1 kJ/kg * K = 1 J/g * ºC\\]\nSistema métrico a ingles: \\[1 Btu/lbm *ºF = 4.1868 kJ/kg * ºC\\] \\[1 Btu/lbmol * R = 4.1868 kJ/kmol * K\\] \\[1 kJ/kg * ºC = 0.23885 btu/lbm * ºF = 0.23885 Btu/lbm * R\\]\nd"
  },
  {
    "objectID": "posts/coffee/index.html",
    "href": "posts/coffee/index.html",
    "title": "Puntuación por taza de café (CQI)",
    "section": "",
    "text": "En este gráfico destacan los cinco países con mayor producción de café en el mundo, tomando en cuenta varias medidas de calidad: aroma, sabor, regusto, acidez, cuerpo, balance, uniformidad, limpieza de la taza, dulzura, humedad y defectos.\n\n# LIBRARIES\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(reshape2)\nlibrary(ggcorrplot)\nlibrary(ggcharts)\nlibrary(tmaptools)\nlibrary(prismatic)\nlibrary(patchwork)\nlibrary(gridExtra)\nlibrary(ggflags)\nlibrary(showtext)\nlibrary(camcorder)\nlibrary(ggtext)\n\n\n# FONTS\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\n\n# DATA\ncoffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')\ncoffee_ratings = data.frame(coffee_ratings, stringsAsFactors = FALSE)\n\ncoffee_ratings <- coffee_ratings %>%\n  filter(country_of_origin %in% c(\"Brazil\", \"Vietnam\", \"Colombia\", \"Indonesia\", \"Ethiopia\")) \n\ncoffee_ratings <- coffee_ratings %>%\n  mutate(iso3 = countrycode::countrycode(country_of_origin,\n                                         origin = \"country.name.en\",\n                                         destination = \"iso3c\"))\n\n\ndata2 <- tibble(\n  count = c(1,1,1,1,1),\n  n = c(1,2,3,4,5),\n  country =c(\"Brazil\", \"Vietnam\", \"Colombia\", \"Indonesia\", \"Ethiopia\"),\n  code =c(\"br\",\"vn\",\"co\",\"id\",\"et\"))\n\ndata1 <- coffee_ratings %>%\n  mutate(iso3 = countrycode::countrycode(country_of_origin,\n                                         origin = \"country.name.en\",\n                                         destination = \"iso3c\"))\n\n# PLOT\n\np1 <- ggplot(data=coffee_ratings) + \n  #annotation_custom(grob = g, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) + \n  xlim(69,90) +\n  geom_violin(aes(y = country_of_origin, x = total_cup_points), color=NA, alpha=.95 ) +\n  geom_jitter(aes(y = country_of_origin, x = total_cup_points),\n              height = .2, size = 4,\n              alpha = .5,\n              color = \"#daa520\")  +\n  geom_boxplot(aes(y = country_of_origin, x = total_cup_points),\n               alpha = 0,\n               outlier.shape = NA,\n               coef = 0,\n               color = \"#daa520\",\n               fill = \"red\") +\n  geom_vline(xintercept = mean(coffee_ratings$total_cup_points),\n             linetype = 2,\n             size = 0.5, col=\"red\") +\n  geom_curve(x = 83.5, y = 5, xend = 87, yend = 5.1)+\n  annotate(\"text\", label = \"Valoración media\\nde todos los países productores\", x = 87, y = 5.3, family = \"fira\") +\n  geom_segment(aes(x = mean(total_cup_points), \n                   y = country_of_origin, \n                   yend= country_of_origin, xend=  83, \n                   col=\"red\" )) +\n  geom_point(aes(y = country_of_origin, x = mean(total_cup_points)),\n             size = 4, col = \"red\") +\n  labs(title = \"\\nPuntuación por taza de café (CQI: 2010 - 2018)\",\n       subtitle = \"Mayores productores de café del mundo\\nDatos: Coffee Quality Institute (CQI) 2010-2018\\n\\nMedidas de calidad: aroma, sabor, regusto, acidez, cuerpo, balance,\\nuniformidad, limpieza de la taza, dulzura, humedad y defectos\\n\",\n       caption = \"\") +\n  xlab(\"\\nPuntuación por taza\") +\n  ylab(\" \") +\n  geom_flag(data=data2, aes(y=country,  x=70,\n                            country=code), size=25 ) +\n  theme(legend.position = \"none\",\n        panel.grid.major = element_line(size = 0.1, linetype = 'solid',\n                                        colour = \"white\"), \n        panel.grid.minor = element_line(size = 0.1, linetype = 'solid',\n                                        colour = \"white\"),\n        axis.title.x=element_text(size=16, family = \"fira\"),\n        plot.title=element_text(size=25, family = \"bit\", color = \"#190706\"),\n        axis.text.y  = element_text(color = \"#190706\", size=14, family = \"fira\"),\n        axis.text.x  = element_text(color = \"#190706\", size=12, family = \"fira\"),\n  )\n\n#p1"
  },
  {
    "objectID": "AV/d/index.html",
    "href": "AV/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "av.html",
    "href": "av.html",
    "title": "CA",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "ca.html",
    "href": "ca.html",
    "title": "CA",
    "section": "",
    "text": "Telecomunicaciones y Sistemas de Seguridad\n\n\n\n\n\n\n\nCA\n\n\n\n\n\n\n\n\n\n\n\nFeb 17, 2024\n\n\nFreddy Villabona\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ca/d/index.html",
    "href": "ca/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "📝 Notes",
    "section": "",
    "text": "Viaje por mi cumpleaños\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nMay 5, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nGestos pequeños\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nMay 1, 2024\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "notes/d/index.html",
    "href": "notes/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "notas/emissions/index.html",
    "href": "notas/emissions/index.html",
    "title": "Viaje por mi cumpleaños",
    "section": "",
    "text": "Hace poco estuve visitando Roma, aprovechando los días libres de Semana Santa y regalándome el viaje por mi cumpleaños. No había estado antes en ningún lugar de Italia, pero desde antes de planear la visita tenía la impresión de que algo sabía de la ciudad. Había visto mapas, fotos de amigos viajeros y bastante material digital de los sitios más emblemáticos de la capital italiana. \nLa noche antes del vuelo no dormí prácticamente nada, pero me levanté de la cama con muy buena energía para emprender el viaje. \nLlegando a Roma muy temprano, con mucho frío pero con una bienvenida cálida por parte del personal del aeropuerto, buongiorno, avanti, benvenuto, andiamo, allora, prego, grazie mile. Y aún no estaba claro, pero todavía quedaba una hora en tren desde el aeropuerto Leonardo Da Vinci hasta Roma.\nAntes del mediodía estaba en el hotel, cerca del casco histórico, dejando mis tres cosas y saliendo inmediatamente a disfrutar de la ciudad. El clima parecía insuperable: un sol radiante, 17 grados centígrados, miles de personas caminando por todos lados, en especial por las calles angostas y coloridas. Era una locura y una belleza. \nEl clima estaba ideal para caminar, pero las calles estaban desbordadas de gente y no se podía avanzar con total comodidad. Un mar de gente recorría las principales avenidas, la gente hablando a los gritos y fumando con frecuencia. En todo momento parecía que un auto iba a arrollar a alguien, pero por fortuna no ocurría y todos coexistían en un caos que parecía normal. \nTenía hora pautada para visitar el coliseo, pero antes era el momento indicado para ir por un café, por una buena pizza o una buena pasta. Los camareros muy habilidosos, podían entender muy bien castellano, francés e inglés, con amabilidad y rapidez tenían en la mesa lo que el cliente deseara. Por ser día de mi cumpleaños quería comer lo más tradicional que pudiera encontrarme, una pasta increíble con unas salsas espectaculares, un par de birras Peroni, unas copas de vino tinto y unos postres con helado y sabor a vainilla. Buena comida, buena atención y buenos precios, nada podía estar mejor. \nSe notaba la cara de felicidad de los turistas, sonriendo a carcajadas, brindando por la vida, haciendo fotos por todos lados y apreciando cada detalle de las maravillas de Roma. No faltaban las adversidades de los vendedores, \"tenga cuidado, hay carteristas robando a toda hora\". \nLa visita al coliseo romano, a la Fontana di Trevi, a la Basílica de San Pedro, a la La Piazza Navona, a la Ciudad del Vaticano, generan emociones impactantes, hacen transportar tu mente a un pasado del que poco sabes. La energía que transmite cada lugar es especial. Encuentras a miles de personas leyendo su historia, apreciando el arte, haciendo fotos, pidiendo deseos, rezando y observando cada detalle. Siempre están presentes las personas que te piden que les ayudes con una foto y en ese momento intentas hacer la mejor foto de tu vida, como debe de ser. \nDespués de unas horas en Roma, cuando los ojos se acostumbran un poco al contraste del lugar, se comienza a notar el espíritu de trabajo de los locales, el ambiente fiestero por las noches y los lotes de basura en casa esquina. Roma es una ciudad bonita, con espacios bien cuidados, pero también encuentras muchos sitios descuidados, con malos olores y sucios. Es una ciudad de contrastes.\nDespedirse de Roma genera un momento de nostalgia, también de agradecimiento por haber podido materializar el viaje. Me quedo con los colores y los sabores de una ciudad cálida e impresionante, finalmente quedaba por disfrutar de uno de los aeropuertos más bonitos del mundo. El Aeropuerto Leonardo da Vinci que es también una obra de arte.\nDespués del viaje y ya en casa, he sentido como si hubiese estado en Roma desde hace mucho tiempo, tal vez parte de la imaginación, pero me queda la idea que antes había estado ahí. Cuando he viajado siempre me pregunto: ¿viviría en este lugar? Esta vez diría que no.  \nSin más. Volveré, Roma. \nHappy Birthday to me!"
  },
  {
    "objectID": "notas/notes_ggplot2/index.html",
    "href": "notas/notes_ggplot2/index.html",
    "title": "ggplot2 🇨🇭",
    "section": "",
    "text": "Qualification of a university student in their last 7 semesters.\n\n{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c\n\n\nQualification of a university student in their last 7 semesters. 🇨🇭 🇨🇭\nWorking with the libraries: “ggplot2”, “dplyr”, “hrbrthemes”, “viridis”, “readxl” and “patchwork”.\n- In Switzerland the maximum rating is 6 and the minimum 1.\n- Customised details in the colour palette and caption."
  },
  {
    "objectID": "notas/roma/index.html",
    "href": "notas/roma/index.html",
    "title": "Viaje por mi cumpleaños",
    "section": "",
    "text": "Hace poco estuve visitando Roma, aprovechando los días libres de Semana Santa y regalándome el viaje por mi cumpleaños. No había estado antes en ningún lugar de Italia, pero desde antes de planear la visita tenía la impresión de que algo sabía de la ciudad. Había visto mapas, fotos de amigos viajeros y bastante material digital de los sitios más emblemáticos de la capital italiana. \nLa noche antes del vuelo no dormí prácticamente nada, pero me levanté de la cama con muy buena energía para emprender el viaje. \nLlegando a Roma muy temprano, con mucho frío pero con una bienvenida cálida por parte del personal del aeropuerto, buongiorno, avanti, benvenuto, andiamo, allora, prego, grazie mile. Y aún no estaba claro, pero todavía quedaba una hora en tren desde el aeropuerto Leonardo Da Vinci hasta Roma.\nAntes del mediodía estaba en el hotel, cerca del casco histórico, dejando mis tres cosas y saliendo inmediatamente a disfrutar de la ciudad. El clima parecía insuperable: un sol radiante, 17 grados centígrados, miles de personas caminando por todos lados, en especial por las calles angostas y coloridas. Era una locura y una belleza. \nEl clima estaba ideal para caminar, pero las calles estaban desbordadas de gente y no se podía avanzar con total comodidad. Un mar de gente recorría las principales avenidas, la gente hablando a los gritos y fumando con frecuencia. En todo momento parecía que un auto iba a arrollar a alguien, pero por fortuna no ocurría y todos coexistían en un caos que parecía normal. \nTenía hora pautada para visitar el coliseo, pero antes era el momento indicado para ir por un café, por una buena pizza o una buena pasta. Los camareros muy habilidosos, podían entender muy bien castellano, francés e inglés, con amabilidad y rapidez tenían en la mesa lo que el cliente deseara. Por ser día de mi cumpleaños quería comer lo más tradicional que pudiera encontrarme, una pasta increíble con unas salsas espectaculares, un par de birras Peroni, unas copas de vino tinto y unos postres con helado y sabor a vainilla. Buena comida, buena atención y buenos precios, nada podía estar mejor. \nSe notaba la cara de felicidad de los turistas, sonriendo a carcajadas, brindando por la vida, haciendo fotos por todos lados y apreciando cada detalle de las maravillas de Roma. No faltaban las adversidades de los vendedores, “tenga cuidado, hay carteristas robando a toda hora”. \nLa visita al Coliseo Romano, a la Fontana di Trevi, a la Basílica de San Pedro, a la La Piazza Navona, a la Ciudad del Vaticano, generan emociones impactantes, hacen transportar tu mente a un pasado del que poco sabes. La energía que transmite cada lugar es especial. Encuentras a miles de personas leyendo su historia, apreciando el arte, haciendo fotos, pidiendo deseos, rezando y observando cada detalle. Siempre están presentes las personas que te piden que les ayudes con una foto y en ese momento intentas hacer la mejor foto de tu vida, como debe de ser. \nDespués de unas horas en Roma, cuando los ojos se acostumbran un poco al contraste del lugar, se comienza a notar el espíritu de trabajo de los locales, el ambiente fiestero por las noches y los lotes de basura en cada esquina. Roma es una ciudad bonita, con espacios bien cuidados, pero también encuentras muchos sitios descuidados, con malos olores y sucios. Es una ciudad de contrastes.\nDespedirse de Roma genera un momento de nostalgia, también de agradecimiento por haber podido materializar el viaje. Me quedo con los colores y los sabores de una ciudad cálida e impresionante, finalmente quedaba por disfrutar de uno de los aeropuertos más bonitos del mundo. El Aeropuerto Leonardo da Vinci que es también una obra de arte.\nDespués del viaje y ya en casa, he sentido como si hubiese estado en Roma desde hace mucho tiempo, tal vez parte de la imaginación, pero me queda la idea que antes había estado ahí. Cuando he viajado siempre me pregunto: ¿viviría en este lugar? Esta vez diría que no.  \nSin más. Volveré, Roma.\nHappy Birthday to me!"
  },
  {
    "objectID": "notas/n1/index.html",
    "href": "notas/n1/index.html",
    "title": "Gestos pequeños",
    "section": "",
    "text": "Creo firmemente en los gestos pequeños: saludar, sonreír, sujetar la puerta, invitar un café, devolver el balón que se escapa por la acera; intentar ser amable aunque sea un día complicado, intentar ser más grande de lo que eres, sobre todo cuando es difícil.\nLas buenas personas se dan cuenta y lo aprecian. Cuando alguien puede hacer algo por mí, también lo aprecio.\nLos gestos pequeños pueden suponer un esfuerzo, o incluso ir contra nuestra corriente, pero lo irónico es que casi siempre que los haces, te sientes mejor contigo mismo.\nPor un momento, la vida parece de repente más ligera, más tranquila y sin duda más feliz."
  },
  {
    "objectID": "posts/tormentas/index.html",
    "href": "posts/tormentas/index.html",
    "title": "Tormentas tropicales en el Océano Atlántico",
    "section": "",
    "text": "Ciclones desde 2008 a 2022 - Datos: NOAA\n\n{\n  library(\"tidyverse\")\n  library(\"showtext\")\n  library(\"ggtext\")\n  library(\"waffle\")\n  library(\"MetBrewer\")\n}\n\nstorms_df <- storms|> \n  filter(year >= 2008,\n         status %in% c(\"hurricane\", \"tropical depression\",\n                       \"tropical storm\",\"tropical wave\"))|> \n  count(year, status)\n\n\nstorms_df$status <-  gsub('hurricane','\\nHuracán\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical depression','\\nDepresión tropical\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical storm','\\nTormenta tropical\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical wave','\\nOnda tropical\\n',storms_df$status)\n\n\nfont_add_google(\"Outfit\", \"title_font\")\nfont_add_google(\"Cabin\", \"body_font\")\nshowtext_auto()\n\ntitle_font <- \"title_font\"\nbody_font <- \"body_font\"\n\ntitle_text <- \"Tormentas tropicales en el Océano Atlántico\"\nsubtitle_text <- \"\"\ncaption_text <- \"Ciclones desde 2008 a 2022 - Datos: NOAA\"\n\nplot <- ggplot(storms_df, aes(fill = status, values = n)) +\n  geom_waffle(color = \"white\", size = .25, n_rows = 20, flip = TRUE, radius = unit(.5, \"pt\")) +\n  facet_wrap(~year, nrow = 1, strip.position = \"bottom\") +\n  scale_x_discrete() + \n  scale_y_continuous(labels = function(x) x * 10, # make this multiplyer the same as n_rows\n                     expand = c(0,0))+\n  \n  #MetBrewer::scale_fill_met_d(\"Hokusai2\", direction=1) +\n  scale_fill_manual(values=c(\"#154360\",\"red\",\"blue\",\"#D98880\")) +\n  \n  coord_equal()+\n  labs(title = title_text,\n       subtitle = subtitle_text,\n       caption = caption_text)+\n  theme_minimal()+\n  theme(\n    axis.title = element_blank(),\n    axis.text.x = element_text(family = body_font, size=12),\n    axis.text.y = element_text(family = body_font, size=12),\n    \n    # Legend\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.spacing = unit(0.5, 'cm'),\n    legend.key.height= unit(0.5, 'cm'),\n    legend.key.width= unit(0.7, 'cm'),\n    legend.text = element_text(family = body_font,\n                               size=13,\n                               face = 'plain',\n                               color = \"grey10\"),\n    \n    # TITLE\n    plot.title.position = \"plot\",\n    plot.title = element_textbox(margin = margin(20, 0, 10, 0),\n                                 size = 30,\n                                 family = title_font,\n                                 face = \"bold\",\n                                 width = unit(55, \"lines\")),\n    \n    # SUB-TITLE\n    plot.subtitle = element_text(margin = margin(10, 0, 20, 0),\n                                 size = 16,\n                                 family = body_font,\n                                 color = \"grey15\"),\n    # CAPTION\n    plot.caption = element_text(family=body_font,\n                                face=\"plain\",\n                                size=10, \n                                color=\"grey40\",\n                                hjust=.5,\n                                margin=margin(20,0,0,0)),\n    \n    plot.background = element_rect(color=\"white\", fill=\"white\"),\n    plot.margin = margin(20, 40, 20, 40)\n  )\n\n#plot"
  },
  {
    "objectID": "posts/copenhague/index.html",
    "href": "posts/copenhague/index.html",
    "title": "Temperatura media en Copenhague, Dinamarca",
    "section": "",
    "text": "Datos: climate_CPH (1995-2019)\n\n{\nlibrary(\"tidyverse\")\nlibrary(\"ggthemes\")\nlibrary(\"ggHoriPlot\")\nlibrary(\"showtext\")\nlibrary(\"ggtext\")\n}\n\nutils::data(climate_CPH)\n\ncutpoints <- climate_CPH  %>% \n  mutate(\n    outlier = between(\n      AvgTemperature, \n      quantile(AvgTemperature, 0.25, na.rm=T)-1.5*IQR(AvgTemperature, na.rm=T),\n      quantile(AvgTemperature, 0.75, na.rm=T)+1.5*IQR(AvgTemperature, na.rm=T))) %>% \n  filter(outlier)\n\nori <- sum(range(cutpoints$AvgTemperature))/2\nsca <- seq(range(cutpoints$AvgTemperature)[1], range(cutpoints$AvgTemperature)[2], length.out = 7)[-4]\n\n\n# fonts\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\nplot <-  ggplot(data = climate_CPH) +\n  geom_horizon(aes(date_mine, \n                   AvgTemperature,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_manual(values = c(\"#5A101C\",\"#BF4149\",\"#f1d2ce\",\"#CDE1F0\",\"#4C8BBF\",\"#102F63\") ) +\n  facet_grid(Year~., switch = \"y\", scales = \"free\", space = \"free\") +\n  theme_few() +\n  \n  theme(\n    text = element_text(family = \"fira\"),\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y.left = element_text(size = 16, angle = 0) ,\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    plot.title = element_text(size=30),\n    legend.position = \"bottom\",\n    axis.text=element_text(size=16),\n    legend.text = element_text(size=16),\n    legend.title = element_text(size=16)\n  ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  xlab('\\n') +\n  ggtitle('\\nTemperatura media en Copenhague, Dinamarca\\n (1995 - 2019)', \n          '\\n') +\n  guides(fill=guide_legend(title=\"Temperatura °C\"))\n\n#plot"
  },
  {
    "objectID": "posts/library_unikn/index.html",
    "href": "posts/library_unikn/index.html",
    "title": "Generar n colores con ayuda de la librería unikin",
    "section": "",
    "text": "Datos: climate_CPH (1995-2019)\n\n{\nlibrary(\"unikn\")\n}\n  \npal <- c(\"#c9bfcf\",\"#3b2a46\")\npal <- unikn::usecol(pal, n = 5)\npal\n\n[1] \"#C9BFCF\" \"#A599AC\" \"#82748A\" \"#5E4F68\" \"#3B2A46\""
  }
]