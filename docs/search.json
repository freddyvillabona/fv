[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fredd Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist at BBVA | Resume\n\n\nProgramandoenR | R Views |\nSyndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#dreams",
    "href": "index.html#dreams",
    "title": "Freddy Villabona",
    "section": "%>% Dreams",
    "text": "%>% Dreams\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "programandoenr.html",
    "href": "programandoenr.html",
    "title": "📊 programandoenR",
    "section": "",
    "text": "Web Scraping con rvest\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSep 22, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nVinos 2021, análisis descriptivo\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 3, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nGráfico de barras horizontales con ggplot2 🇧🇷\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJun 2, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nGenerar n colores con ayuda de la librería unikn\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\ntips\n\n\n\n\n\n\n\n\n\n\n\nMay 31, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nTemperatura media en Copenhague, Dinamarca\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 26, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nTormentas tropicales en el Océano Atlántico\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 18, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nPuntuación por taza de café (CQI)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nNov 21, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nBoxplot (data:diamonds)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 27, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nMonthly sales of an online shop in the UK 🇬🇧\n\n\n\n\n\n\n\ncode\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nMay 1, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nWorld’s tallest towers (Top 6)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 13, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nPercentage of Russian speakers in Ukraine 🇺🇦\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nmap\n\n\n\n\n\n\n\n\n\n\n\nJan 11, 2023\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nWinning the 2022 World Cup (Top 10 favourites)\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nDec 1, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nggplot2 🇨🇭\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nApr 27, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nContours with ggplot2\n\n\n\n\n\n\n\ncode\n\n\n\n\n\n\n\n\n\n\n\nApr 21, 2022\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nCO2 emissions, GDP per capita and population by country - 2020\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMar 28, 2022\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "fv/about.html",
    "href": "fv/about.html",
    "title": "About",
    "section": "",
    "text": "This is the contents of the about page for my blog.\n\nAbout this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "fv/index.html",
    "href": "fv/index.html",
    "title": "Freddy Villabona",
    "section": "",
    "text": "%>% Dreams\nFreddy Villabona C.\n\nWorking as a data scientist | Resume\n\n\nProgramandoenR | R Views | Syndicated on R-Bloggers & R Weekly"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n\n\n# :)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/emissions/index.html",
    "href": "posts/emissions/index.html",
    "title": "CO2 emissions, GDP per capita and population by country - 2020",
    "section": "",
    "text": "This is a post with executable code.\n\n# Lib:\nlibrary(\"dplyr\")\nlibrary(\"spData\") \nlibrary(\"hrbrthemes\")\nlibrary(\"ggplot2\")\n\n# Dat:\ns <- read.csv(\"s.csv\")\n\n# legend_size\nlegend_size <- c(5,6,7,8,9)\n\n# Plot\nplot <- ggplot(s, aes(gdpPercap, emissions)) +\n  ggtitle(\"CO2 emissions, GDP per capita and population by country - 2020\") +\n  ylab(\"CO2 emissions (metric tonnes per person)\") +\n  xlab(\"GDP per capita\") +\n  geom_point(aes(size = pop, \n                 fill = Continente), \n             shape = 21, \n             alpha = 0.7) +\n  scale_fill_viridis_d(\n    guide = guide_legend(override.aes = list(size = 10))) +\n  scale_size(range = c(0.1, 30),\n             name=\"Población (mills.)\",\n             breaks = 30000 * c(250, 500, 750, 1000, 1250),\n             labels = c(\"280\", \"560\", \"840\", \"1120\", \"1400\"),\n  ) +\n  geom_text(aes(x = gdpPercap, y = emissions+1.5, label = country),\n            color = \"blue\",\n            data = filter(s, \n                          pop > 1000000000 | country %in% c(\"Norway\",\n                                                               \"Singapore\",\n                                                               \"Luxembourg\",\n                                                               \"United States\",\n                                                               \"Switzerland\",\n                                                               \"Spain\",\n                                                               \"Brazil\",\n                                                               \"Japan\",\n                                                               \"Qatar\",\n                                                               \"Kuwait\",\n                                                               \"Chile\",\n                                                               \"Netherlands\",\n                                                               \"Trinidad and Tobago\",\n                                                               \"United Kingdom\"))) +\n  theme_ipsum(axis_title_size = 7) +\n  theme(legend.position=\"bottom\",\n        legend.box = \"vertical\")\n\n# plot\n# :)"
  },
  {
    "objectID": "posts/notes_ggplot2/index.html",
    "href": "posts/notes_ggplot2/index.html",
    "title": "ggplot2",
    "section": "",
    "text": "Qualification of a university student in their last 7 semesters. 🇨🇭\n\n{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c\n\n\nQualification of a university student in their last 7 semesters. 🇨🇭 🇨🇭\nWorking with the libraries: “ggplot2”, “dplyr”, “hrbrthemes”, “viridis”, “readxl” and “patchwork”.\n- In Switzerland the maximum rating is 6 and the minimum 1.\n- Customised details in the colour palette and caption."
  },
  {
    "objectID": "posts/Ukraine_map_ggplot2/index.html",
    "href": "posts/Ukraine_map_ggplot2/index.html",
    "title": "Percentage of Russian speakers in Ukraine",
    "section": "",
    "text": "Working with the libraries: “sf”, “stringr”, “dplyr”, “ggplot2” and “ggthemes”. 🇺🇦\n\n# lIB\n\n{\nlibrary('sf')\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"stringr\")\n}\n\nru <- read_sf('ruso/Ruso_Parlantes_Ucrania.shp')\n\nru <- ru %>% \n  st_as_sf()\n\nA <- ggplot(data = ru) +\n  ggtitle(\"Україна - Відсоток російськомовних\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6) +\n  geom_sf_text(aes(label =Ucraniano),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 16),\n        plot.subtitle = element_text(size = 20)) +\n  labs(fill= \"Відсоток\")\n\nA\n\n\n\nlibrary(\"ggspatial\")\n\nru$Español <- gsub(\"Ciudad de Kiev\",\"Kiev \",ru$Español)\nru$Español <- gsub(\"República Autónoma de Crimea\",\"Crimea\",ru$Español)\n\nes <- ggplot(data = ru) +\n  ggtitle(\"Percentage of Russian speakers in Ukraine\") +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=PorcRus), show.legend = T, size = 0.05) +\n  scale_fill_viridis_c(alpha = .6, direction = -1) +\n  geom_sf_text(aes(label =Español),size=3,family=\"sans\")+\n  theme(plot.title = element_text(size = 20, face = \"bold\"),\n        plot.subtitle = element_text(size = 20),\n        legend.position=\"bottom\") +\n  labs(fill= \"%\") +\n  annotation_scale()\n\nes \n\n\n\n\nShapefile layers 2019 Data: gov.uk"
  },
  {
    "objectID": "posts/Contornos/index.html",
    "href": "posts/Contornos/index.html",
    "title": "Contours with ggplot2",
    "section": "",
    "text": "This is a post with executable code.\n\nlibrary(\"ggplot2\")\n\nsegmentos = data.frame(\n  x= c(1.5, 1.5, 1.5),\n  xend = c(1.7, 1.7, 1.7),\n  y = c(90, 93, 96), \n  yend = c(90, 93, 96))\n\nsegmentos2 = data.frame(\n  y = c(50,50,50), \n  yend = c(50,50,50),\n  x= c(4, 4.5, 5),\n  xend = c(4.5, 5, 5.5))\n\nlista <- colorRampPalette(c(\"white\", \"blue\", \"red\"))(75)\n\n  ggplot(faithful, aes(x = eruptions, y = waiting)) +\n    geom_point(size=.5) +\n    xlim(0.5, 6) +\n    ylim(40, 110) +\n    geom_density_2d_filled(alpha = 0.8, bins=75) +\n    scale_fill_manual(values = lista) +\n    \n    geom_segment(data=segmentos, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=5) +\n    geom_segment(data=segmentos2, mapping=aes(x=x, xend=xend, y=y, yend=yend), color= c(\"#EEEEFE\", \"#5356f6\", \"#D2565E\"), linewidth=3) +\n    geom_text(mapping=aes(label=\"Contornos con ggplot2\", y=(110), x=3), size=6, color=\"black\", fontface=\"bold\") +\n    \n    geom_text(mapping=aes(label=\"C\", y=(90), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"B\", y=(93), x=1.8), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"A\", y=(96), x=1.8), size=3, color=\"black\") +\n    \n    geom_text(mapping=aes(label=\"0\", y=(48), x=4), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.00972\", y=(48), x=4.75), size=3, color=\"black\") +\n    geom_text(mapping=aes(label=\"0.01944\", y=(48), x=5.35), size=3, color=\"black\") +\n  \n    theme(\n      legend.position = \"none\",\n      plot.background=element_rect(fill=\"white\", color=\"white\"),\n      panel.background = element_rect(fill=\"white\", color=\"white\"),\n      axis.ticks=element_blank(),\n      axis.title.x=element_blank(),\n      axis.text.x = element_blank(),\n      axis.title.y=element_blank(),\n      axis.text.y = element_blank()\n    )"
  },
  {
    "objectID": "posts/map_UK/index.html",
    "href": "posts/map_UK/index.html",
    "title": "Monthly sales of an online shop in the UK 🇬🇧",
    "section": "",
    "text": "Map of the United Kingdom drawn from a shapefile layer. This is a post with executable code.\n\n# LIB\n\nlibrary(\"dplyr\")\nlibrary(\"ggplot2\")\nlibrary(\"sf\")\nlibrary(\"ggtext\")\n\n# UK SHAPEFILE\nuk <- read_sf('uk/uk_shapefile.shp')\nuk <- uk %>% \n  st_as_sf()\n\n# DATA (CSV)\ndata <- read.csv2(\"data.csv\")\n\n# (SHAPEFILE AND DATOS)\nmap_uk <- merge(uk, data, by = \"Region\")\nmap_uk <- map_uk %>% \n  st_as_sf()\n\n# COLORS\npal <- colorRampPalette(c(\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \n           \"#41b6c4\", \"#2c7fb8\"))(12)\n\n# MAP1\n\n ggplot(data = map_uk) +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=Mean), show.legend = T, size = 0.05, lwd = 0) +\n  scale_fill_gradientn(colours = pal) +\n  geom_sf_text(aes(label =Region),size=2.5, colour=\"black\")+\n   theme(plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n         plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n         plot.caption = element_text(size = 10, face=\"bold\", hjust = 1)) +\n   labs(title=\"Sales per month \", \n        subtitle = \"\\nUK\",\n        caption = \"Data: uml - 2023\",\n        fill= \"Ventas\") \n\n\n\n# MAP2\n \n ggplot(data = map_uk) +\n  xlab(\"\") +\n  ylab(\"\") +\n  geom_sf(aes(fill=Mean), show.legend = T, size = 0.05, lwd = 0) +\n  scale_fill_gradientn(colours = pal) +\n  geom_sf_text(aes(label =Region),size=2.5, colour=\"black\")+\n  theme_void() +\n   theme(plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n         plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n         plot.caption = element_text(size = 10, face=\"bold\", hjust = 1)) +\n   labs(title=\"Sales per month \", \n        subtitle = \"\\nUK\",\n        caption = \"Data: uml - 2023\",\n        fill= \"Ventas\")"
  },
  {
    "objectID": "posts/leaflet/index.html",
    "href": "posts/leaflet/index.html",
    "title": "Monthly sales of an online shop in the UK 🇬🇧",
    "section": "",
    "text": "Map of the United Kingdom drawn from a shapefile layer. This is a post with executable code.\n# LIB\n\n{\nlibrary(\"readxl\")\nlibrary(\"leaflet\")\nlibrary(\"leafem\")\n}\n\nlogo <- \"https://www.r-project.org/logo/Rlogo.svg\"\n\ndata <- read_excel(\"dat.xlsx\")\nd <- 1\n\nicons <- awesomeIcons(\n  icon = \"beer\",\n  iconColor = 'black',\n  library = 'ion'\n)\n\n\nmap <- leaflet(data) %>% \n#  addTiles() %>%\n  \n  # Base groups\n  addTiles(group = \"OSM (default)\") %>%\n#  addProviderTiles(providers$Stamen.TonerLite, group = \"Toner Lite\") %>%\n  \n  addCircles(lng = ~data$long, \n             lat = ~data$lat, \n             weight = 8, \n             color=\"red\",\n             radius = ~d, \n             popup = ~data$text, \n             label = ~data$text, \n             group=\"Location\") %>%\n  \n  addAwesomeMarkers(lng = ~data$long, \n                    lat = ~data$lat,icon=icons,\n                    label = ~data$text,\n                    group=\"Location\") %>%\n  \n  # Layers control\n  addLayersControl(\n    baseGroups = c(\"Toner Lite\", \"OSM (default)\"),\n    overlayGroups = c(\"Location\"),\n    options = layersControlOptions(collapsed = FALSE))  %>%\n # addScaleBar() %>%\n#  addMouseCoordinates() %>%\n  addLogo(logo, url = \"https://www.r-project.org/logo/\")\n\nmap"
  },
  {
    "objectID": "posts/World_Cup/index.html",
    "href": "posts/World_Cup/index.html",
    "title": "Winning the 2022 World Cup (Top 10 favourites)",
    "section": "",
    "text": "Winning the 2022 World Cup\n- The grey line shows the predictions before the start of the World Cup.\n- The blue line shows the current predictions.\n\n# LIB\n{\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(ggflags)\nlibrary(stringr)\nlibrary(hrbrthemes)\n}\n\n# DATA\ncup <- read.csv(\"cup.csv\", sep=\";\", stringsAsFactors = FALSE)\ncup <- cup[with(cup, order(-cup$WIN.WORLD.CUP)), ] \n\n# ORDER\ncup$TEAM <- gsub(\"\\n\",\"\",cup$TEAM)\ncup$TEAM <- gsub(\" \",\"\",cup$TEAM)\ncup$TEAM <- str_replace_all(cup$TEAM,\" \", \"\")  \ncup$TEAM\n\n [1] \"Brazil\"      \"Spain\"       \"France\"      \"Argentina\"   \"Portugal\"   \n [6] \"Germany\"     \"England\"     \"Netherlands\" \"Uruguay\"     \"Belgium\"    \n[11] \"Denmark\"     \"Croatia\"     \"Switzerland\" \"USA\"         \"Mexico\"     \n[16] \"Senegal\"     \"Ecuador\"     \"Morocco\"     \"Serbia\"      \"Japan\"      \n[21] \"Canada\"      \"Poland\"      \"SouthKorea\"  \"Tunisia\"     \"Iran\"       \n[26] \"Wales\"       \"Cameroon\"    \"SaudiArabia\" \"Australia\"   \"Qatar\"      \n[31] \"Ghana\"       \"CostaRica\"  \n\ncup <- head(cup,10)\nnames(cup)[12] = \"Win\"\n\n\nnew <- c(29.10, 12.00, 12.80, \n         12.90, 8.10, 0, \n         9.40, 6.00, 1.10, 0)\n\ncup2 <- cbind(cup, new)\n\n#PLOT\n\nplot <- ggplot(data=cup2, aes(x= reorder(TEAM, -Win) , y=Win, group=1)) +\n  ggtitle(\"Winning the 2022 World Cup (Top 10 favourites)\") +\n  xlab(\"Country\") +\n  ylab(\"Percentage\") +\n  \n  geom_line(col=\"gray\") +\n  geom_point() +\n  \n  geom_line(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1),  col=\"blue\") +\n  geom_point(data=cup2, aes(x= reorder(TEAM, -new) , y=new, group=1)) +\n  \n  geom_text(data=cup2,aes(label=paste(Win, \"%\") ), vjust=2.3, color=\"gray\", size=3.5)+\n  geom_text(data=cup2, \n            aes(x= reorder(TEAM, -new) , y=new, size=18),\n            label=paste(new, \"%\"), vjust=-1.6, color=\"blue\", size=3.5)+\n  geom_flag(data=cup2, aes(x = reorder(TEAM, -Win) , y=-7, country = code), size=15) +\n  theme_ipsum(grid = F, base_family = \"sans\") +\n  labs(subtitle = \"Data: Soccer Power Index (SPI)\") +\n  \n  geom_segment(aes(x=\"France\",\n                   xend = \"Argentina\", \n                   y = 25,\n                   yend = 25),\n               size = 4, \n               col = \"blue\") +\n  \n  geom_segment(aes(x=\"France\",\n                   xend = \"Argentina\", \n                   y = 23,\n                   yend = 23),\n               size = 4,\n               col = \"gray\") +\n  \n  annotate(\"text\", x = \"Germany\", y = 23, label = \"Prediction before the start of the World Cup\") +\n  annotate(\"text\", x = \"Germany\", y = 25, label = \"Current forecast (Thu 1 Dec 22:18 GMT+1)\")\n\n# plot"
  },
  {
    "objectID": "posts/Towers/index.html",
    "href": "posts/Towers/index.html",
    "title": "World’s tallest towers (Top 6)",
    "section": "",
    "text": "World’s tallest towers (Top 6)\n\n# LIB\n\n{\nlibrary(tidyverse)\nlibrary(ggtextures)\nlibrary(magick)\nlibrary(ggflags)\n}\n\n# DATA\n\ndata <- tibble(\n  count = c(1,1,1,1,1,1),\n  n = c(634,600,553,540,468,435),\n  country =c(\"Japan\",\"China\",\"Canada\",\"Russia\",\"China\",\"Iran\"),\n  code =c(\"jp\",\"cn\",\"ca\",\"ru\",\"cn\",\"ir\"),\n  animal = c(\"Tokyo Sky Tree\", \n             \"Torre de Televisión\\nde Cantón\",\n             \"CN Tower\",\n             \"Torre Ostankino\", \n             \"Torre Perla Oriental\", \n             \"Torre Milad\"),\n  image = list(\n    image_read_svg(\"images/b_01.svg\"),\n    image_read_svg(\"images/b_02.svg\"),\n    image_read_svg(\"images/b_03.svg\"),\n    image_read_svg(\"images/b_04.svg\"),\n    image_read_svg(\"images/b_06.svg\"),\n    image_read_svg(\"images/b_08.svg\")\n  )\n)\n\n\ndata <- data %>%\n  mutate(iso3 = countrycode::countrycode(country,\n                                               origin = \"country.name.en\",\n                                               destination = \"iso3c\"))\n\n\n# PLOT\nplot <- ggplot(data, aes(x=reorder(animal,-n), count, image = image)) +\n  geom_isotype_col() + xlab(\"\") + ylab(\"\")+\n  labs(title=\"\\nTorres más altas de mundo\", subtitle = \"\\n\",\n       caption = \"\\n\", fill= \"Districts\") +\n  geom_flag(aes(x=reorder(animal,-n),  y= -.05,\n                country=code), size=15 ) +\n  \n  geom_segment(aes(x = 0, y = (.95), xend = \"Torre Milad\", yend = (.95)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((600*0.95)/634), xend = \"Torre Milad\", yend = ((600*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((553*0.95)/634), xend = \"Torre Milad\", yend = ((553*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((540*0.95)/634), xend = \"Torre Milad\", yend = ((540*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((468*0.95)/634), xend = \"Torre Milad\", yend = ((468*0.95)/634)), alpha=.05) +\n  geom_segment(aes(x = 0, y = ((435*0.95)/634), xend = \"Torre Milad\", yend = ((435*0.95)/634)), alpha=.05) +\n\n  annotate(x = .15, y = (1), \"text\", label= \"(m)\", fontface =2) +\n  annotate(x = .15, y = (.96), \"text\", label= \"634\", fontface =2) +\n  annotate(x = .15, y = ((600*0.95)/634) + 0.01, \"text\", label= \"600\", fontface =2) +\n  annotate(x = .15, y = ((553*0.95)/634) + 0.01, \"text\", label= \"553\", fontface =2) +\n  annotate(x = .15, y = ((540*0.95)/634) + 0.01, \"text\", label= \"540\", fontface =2) +\n  annotate(x = .15, y = ((468*0.95)/634) + 0.01, \"text\", label= \"468\", fontface =2) +\n  annotate(x = .15, y = ((435*0.95)/634) + 0.01, \"text\", label= \"435\", fontface =2) +\n \n  theme(text = element_text(size = 14, face = \"bold\"),\n    axis.text.y = element_blank(), \n    axis.ticks.y = element_blank(),\n    panel.spacing = unit(0, \"pt\"),\n    panel.border = element_blank(),\n    panel.grid.major.x = element_blank(),\n    strip.background = element_blank(),\n    strip.text = element_text(colour = \"black\"),\n    plot.title = element_text(size = 20, face=\"bold\", hjust = 0.5),\n    plot.subtitle = element_text(size = 16, face=\"bold\", hjust = 0.5),\n    plot.caption = element_text(size = 10, face=\"bold\", hjust = 1),\n    panel.background = element_rect(fill = \"white\", colour = \"white\")) +\n    guides(colour = guide_legend(title = \"Location type\", face=\"bold\", \n                               override.aes = list(size=6,linetype=0)))"
  },
  {
    "objectID": "tips.html",
    "href": "tips.html",
    "title": "AV",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "tips/workspace/index.html",
    "href": "tips/workspace/index.html",
    "title": "Workspace",
    "section": "",
    "text": "Video"
  },
  {
    "objectID": "posts/d/index.html",
    "href": "posts/d/index.html",
    "title": "Boxplot (data:diamonds)",
    "section": "",
    "text": "This time we work with diamond data. It generates a diagram of box with “ggplot2”, with various details in the chart that allow better perceive the distribution of data.\n\nlibrary(\"ggplot2\")\ndata(diamonds)\n\n\n  ggplot(data = diamonds, aes(x = cut, y = price)) +\n    scale_fill_manual (values = c(\"#d53e4f\",\n                                \"#f46d43\", \"#66c2a5\", \"#3288bd\", \"#9970ab\")) +\n    scale_color_manual(values = c(\"#d53e4f\", \"#f46d43\",\n                                \"#66c2a5\", \"#3288bd\",\n                                \"#9970ab\")) +\n    geom_jitter(aes(color = cut), size = .01, alpha = 0.4, show.legend = FALSE) +\n    geom_violin(aes(fill = cut), alpha = 0.5, color = NA) + \n    geom_boxplot(aes(color = cut), alpha = 0.5, show.legend = FALSE) +\n    xlab(\"\\nCut\") +\n    ylab(\"Price\") +\n    labs(title=\"\\nDiamonds\", subtitle =\"\", caption = \"Data: diamonds\\n\", fill= \"Cut\") +\n    \n    theme(\n      axis.text.x = element_text(size = 12),\n      axis.text.y = element_text (size = 12),\n      axis.title.x = element_text (size = 13, face=\"bold\"),\n      axis.title.y = element_text(size = 13, face=\"bold\"),\n      panel.spacing = unit(0, \"pt\"),\n      panel.border = element_blank(),\n      panel.grid.major.x = element_blank(),\n      strip.background = element_blank(),\n      strip.text = element_text(colour = \"black\"),\n      legend.justification = c(\"right\", \"top\"),\n      legend.box.just = \"right\",\n      legend.margin = margin(6, 6, 6, 6),\n      plot.title = element_text(size = 20, face = \"bold\", hjust = 0.5),\n      plot.subtitle = element_text(size = 16, face = \"bold\", hjust = 0.5),\n      plot.caption = element_text(size = 10, face = \"bold\", hjust = 1),\n      panel.background = element_rect(fill=\"white\", colour=\"white\")\n)"
  },
  {
    "objectID": "tips/d/index.html",
    "href": "tips/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\nCentrales de alarmas (Grado 2 y 3)\n\nPrevención ante intrusos\nVideovigilancia\nSistema métrico:\n\n$$1 kJ/kg * ºC = 1 kJ/kg * K = 1 J/g * ºC$$\n\\[1 kJ/kg * ºC = 1 kJ/kg * K = 1 J/g * ºC\\]\nSistema métrico a ingles: \\[1 Btu/lbm *ºF = 4.1868 kJ/kg * ºC\\] \\[1 Btu/lbmol * R = 4.1868 kJ/kmol * K\\] \\[1 kJ/kg * ºC = 0.23885 btu/lbm * ºF = 0.23885 Btu/lbm * R\\]\nd"
  },
  {
    "objectID": "posts/coffee/index.html",
    "href": "posts/coffee/index.html",
    "title": "Puntuación por taza de café (CQI)",
    "section": "",
    "text": "En este gráfico destacan los cinco países con mayor producción de café en el mundo, tomando en cuenta varias medidas de calidad: aroma, sabor, regusto, acidez, cuerpo, balance, uniformidad, limpieza de la taza, dulzura, humedad y defectos.\n\n# LIBRARIES\nlibrary(tidyverse)\nlibrary(ggpubr)\nlibrary(reshape2)\nlibrary(ggcorrplot)\nlibrary(ggcharts)\nlibrary(tmaptools)\nlibrary(prismatic)\nlibrary(patchwork)\nlibrary(gridExtra)\nlibrary(ggflags)\nlibrary(showtext)\nlibrary(camcorder)\nlibrary(ggtext)\n\n\n# FONTS\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\n\n# DATA\ncoffee_ratings <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-07/coffee_ratings.csv')\ncoffee_ratings = data.frame(coffee_ratings, stringsAsFactors = FALSE)\n\ncoffee_ratings <- coffee_ratings %>%\n  filter(country_of_origin %in% c(\"Brazil\", \"Vietnam\", \"Colombia\", \"Indonesia\", \"Ethiopia\")) \n\ncoffee_ratings <- coffee_ratings %>%\n  mutate(iso3 = countrycode::countrycode(country_of_origin,\n                                         origin = \"country.name.en\",\n                                         destination = \"iso3c\"))\n\n\ndata2 <- tibble(\n  count = c(1,1,1,1,1),\n  n = c(1,2,3,4,5),\n  country =c(\"Brazil\", \"Vietnam\", \"Colombia\", \"Indonesia\", \"Ethiopia\"),\n  code =c(\"br\",\"vn\",\"co\",\"id\",\"et\"))\n\ndata1 <- coffee_ratings %>%\n  mutate(iso3 = countrycode::countrycode(country_of_origin,\n                                         origin = \"country.name.en\",\n                                         destination = \"iso3c\"))\n\n# PLOT\n\np1 <- ggplot(data=coffee_ratings) + \n  #annotation_custom(grob = g, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) + \n  xlim(69,90) +\n  geom_violin(aes(y = country_of_origin, x = total_cup_points), color=NA, alpha=.95 ) +\n  geom_jitter(aes(y = country_of_origin, x = total_cup_points),\n              height = .2, size = 4,\n              alpha = .5,\n              color = \"#daa520\")  +\n  geom_boxplot(aes(y = country_of_origin, x = total_cup_points),\n               alpha = 0,\n               outlier.shape = NA,\n               coef = 0,\n               color = \"#daa520\",\n               fill = \"red\") +\n  geom_vline(xintercept = mean(coffee_ratings$total_cup_points),\n             linetype = 2,\n             size = 0.5, col=\"red\") +\n  geom_curve(x = 83.5, y = 5, xend = 87, yend = 5.1)+\n  annotate(\"text\", label = \"Valoración media\\nde todos los países productores\", x = 87, y = 5.3, family = \"fira\") +\n  geom_segment(aes(x = mean(total_cup_points), \n                   y = country_of_origin, \n                   yend= country_of_origin, xend=  83, \n                   col=\"red\" )) +\n  geom_point(aes(y = country_of_origin, x = mean(total_cup_points)),\n             size = 4, col = \"red\") +\n  labs(title = \"\\nPuntuación por taza de café (CQI: 2010 - 2018)\",\n       subtitle = \"Mayores productores de café del mundo\\nDatos: Coffee Quality Institute (CQI) 2010-2018\\n\\nMedidas de calidad: aroma, sabor, regusto, acidez, cuerpo, balance,\\nuniformidad, limpieza de la taza, dulzura, humedad y defectos\\n\",\n       caption = \"\") +\n  xlab(\"\\nPuntuación por taza\") +\n  ylab(\" \") +\n  geom_flag(data=data2, aes(y=country,  x=70,\n                            country=code), size=25 ) +\n  theme(legend.position = \"none\",\n        panel.grid.major = element_line(size = 0.1, linetype = 'solid',\n                                        colour = \"white\"), \n        panel.grid.minor = element_line(size = 0.1, linetype = 'solid',\n                                        colour = \"white\"),\n        axis.title.x=element_text(size=16, family = \"fira\"),\n        plot.title=element_text(size=25, family = \"bit\", color = \"#190706\"),\n        axis.text.y  = element_text(color = \"#190706\", size=14, family = \"fira\"),\n        axis.text.x  = element_text(color = \"#190706\", size=12, family = \"fira\"),\n  )\n\n#p1"
  },
  {
    "objectID": "AV/d/index.html",
    "href": "AV/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "av.html",
    "href": "av.html",
    "title": "CA",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "ca.html",
    "href": "ca.html",
    "title": "CA",
    "section": "",
    "text": "Telecomunicaciones y Sistemas de Seguridad\n\n\n\n\n\n\n\nCA\n\n\n\n\n\n\n\n\n\n\n\nFeb 17, 2024\n\n\nFreddy Villabona\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ca/d/index.html",
    "href": "ca/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "notes.html",
    "href": "notes.html",
    "title": "📝 Notes",
    "section": "",
    "text": "Viaje por mi cumpleaños\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nMay 5, 2024\n\n\nFV\n\n\n\n\n\n\n  \n\n\n\n\nGestos pequeños\n\n\n\n\n\n\n\nnotes\n\n\n\n\n\n\n\n\n\n\n\nMay 1, 2024\n\n\nFV\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "notes/d/index.html",
    "href": "notes/d/index.html",
    "title": "Telecomunicaciones y Sistemas de Seguridad",
    "section": "",
    "text": "Prevención ante intrusos, protección contra incendios y videovigilancia\n\nCentrales de alarmas (Grado 2 y 3)\n\n\n\n\nPrevención ante intrusos\nVideovigilancia"
  },
  {
    "objectID": "notas/emissions/index.html",
    "href": "notas/emissions/index.html",
    "title": "Viaje por mi cumpleaños",
    "section": "",
    "text": "Hace poco estuve visitando Roma, aprovechando los días libres de Semana Santa y regalándome el viaje por mi cumpleaños. No había estado antes en ningún lugar de Italia, pero desde antes de planear la visita tenía la impresión de que algo sabía de la ciudad. Había visto mapas, fotos de amigos viajeros y bastante material digital de los sitios más emblemáticos de la capital italiana. \nLa noche antes del vuelo no dormí prácticamente nada, pero me levanté de la cama con muy buena energía para emprender el viaje. \nLlegando a Roma muy temprano, con mucho frío pero con una bienvenida cálida por parte del personal del aeropuerto, buongiorno, avanti, benvenuto, andiamo, allora, prego, grazie mile. Y aún no estaba claro, pero todavía quedaba una hora en tren desde el aeropuerto Leonardo Da Vinci hasta Roma.\nAntes del mediodía estaba en el hotel, cerca del casco histórico, dejando mis tres cosas y saliendo inmediatamente a disfrutar de la ciudad. El clima parecía insuperable: un sol radiante, 17 grados centígrados, miles de personas caminando por todos lados, en especial por las calles angostas y coloridas. Era una locura y una belleza. \nEl clima estaba ideal para caminar, pero las calles estaban desbordadas de gente y no se podía avanzar con total comodidad. Un mar de gente recorría las principales avenidas, la gente hablando a los gritos y fumando con frecuencia. En todo momento parecía que un auto iba a arrollar a alguien, pero por fortuna no ocurría y todos coexistían en un caos que parecía normal. \nTenía hora pautada para visitar el coliseo, pero antes era el momento indicado para ir por un café, por una buena pizza o una buena pasta. Los camareros muy habilidosos, podían entender muy bien castellano, francés e inglés, con amabilidad y rapidez tenían en la mesa lo que el cliente deseara. Por ser día de mi cumpleaños quería comer lo más tradicional que pudiera encontrarme, una pasta increíble con unas salsas espectaculares, un par de birras Peroni, unas copas de vino tinto y unos postres con helado y sabor a vainilla. Buena comida, buena atención y buenos precios, nada podía estar mejor. \nSe notaba la cara de felicidad de los turistas, sonriendo a carcajadas, brindando por la vida, haciendo fotos por todos lados y apreciando cada detalle de las maravillas de Roma. No faltaban las adversidades de los vendedores, \"tenga cuidado, hay carteristas robando a toda hora\". \nLa visita al coliseo romano, a la Fontana di Trevi, a la Basílica de San Pedro, a la La Piazza Navona, a la Ciudad del Vaticano, generan emociones impactantes, hacen transportar tu mente a un pasado del que poco sabes. La energía que transmite cada lugar es especial. Encuentras a miles de personas leyendo su historia, apreciando el arte, haciendo fotos, pidiendo deseos, rezando y observando cada detalle. Siempre están presentes las personas que te piden que les ayudes con una foto y en ese momento intentas hacer la mejor foto de tu vida, como debe de ser. \nDespués de unas horas en Roma, cuando los ojos se acostumbran un poco al contraste del lugar, se comienza a notar el espíritu de trabajo de los locales, el ambiente fiestero por las noches y los lotes de basura en casa esquina. Roma es una ciudad bonita, con espacios bien cuidados, pero también encuentras muchos sitios descuidados, con malos olores y sucios. Es una ciudad de contrastes.\nDespedirse de Roma genera un momento de nostalgia, también de agradecimiento por haber podido materializar el viaje. Me quedo con los colores y los sabores de una ciudad cálida e impresionante, finalmente quedaba por disfrutar de uno de los aeropuertos más bonitos del mundo. El Aeropuerto Leonardo da Vinci que es también una obra de arte.\nDespués del viaje y ya en casa, he sentido como si hubiese estado en Roma desde hace mucho tiempo, tal vez parte de la imaginación, pero me queda la idea que antes había estado ahí. Cuando he viajado siempre me pregunto: ¿viviría en este lugar? Esta vez diría que no.  \nSin más. Volveré, Roma. \nHappy Birthday to me!"
  },
  {
    "objectID": "notas/notes_ggplot2/index.html",
    "href": "notas/notes_ggplot2/index.html",
    "title": "ggplot2 🇨🇭",
    "section": "",
    "text": "Qualification of a university student in their last 7 semesters.\n\n{\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(readxl)\nlibrary(patchwork) \n}\n\nnote <- read_excel(\"note.xlsx\")\n\nnot <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(mean = mean(Note), sum = sum(Note), n = n())\n\nnot <- not %>% \n  arrange(kk)\n\nnot$kk <- as.factor(not$kk)\n\nlb <- c(\"HS2018\", \"FS2019\", \"HS2019\",\n        \"FS2020\", \"HS2020\", \"FS2021\",\n        \"HS2021\")\n\na <- ggplot(not, aes(x= kk, \n                     y=mean, \n                     group = 1, \n                          colour = reorder(kk, Semester) )) + \n  ggtitle(\"Average Grade Score | Calificación promedio\") +\n  geom_line(size=1.7)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Semester | Semestre\") +\n  ylab(\"Note | Calificación\") +\n  theme_ipsum() +\n  scale_color_viridis(discrete = T, labels = lb) +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_x_discrete(labels= lb) +\n  ylim(3.5, 6)\n\na\n\n\n\n###################\nnot2 <- note %>%\n  group_by(Semester, kk) %>% \n  summarise(sum = sum(ECTS), n = n())\n\nnot2 <- not2 %>% \n  arrange(kk)\nnames(not2)[3] = \"ECTS\"\n\npal <- viridis_pal()(7)\n\nb <- ggplot(not2) + \n     geom_col(aes(kk,\n                  ECTS, \n               fill = kk, \n               width = .9), \n           stat = 'identity') + \n  scale_fill_viridis_d(labels = lb,\n                       legend_title <- \"Semester\") +\n  scale_x_discrete(labels = lb) +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"ECTS\")) +\n  labs(title = 'Credits Received | Créditos recibidos',\n    x = 'Semester | Semestre',\n    y = \"ECTS | Créditos recibidos\") \n\nb\n\n\n\n### C\nnote <- read_excel(\"note.xlsx\",5)\nnote$month <- as.Date(note$month)\n\nnames(note)\n\n[1] \"semester\" \"month\"    \"hours\"   \n\nc <- ggplot(note, aes(x= month, \n                     y=hours, \n                     group = 1, \n                     colour = reorder(semester,month) )) + \n  ggtitle(\"Workhours per Month | Horas de trabajo por mes\") +\n  geom_line(size=1.5)  + \n  geom_point(size=3, shape=19, fill=\"white\") + \n  xlab(\"Year | Año\") +\n  ylab(\"Hours | Horas\") +\n  theme_ipsum() +\n  guides(col = guide_legend(title = \"Semester\")) +\n  scale_color_viridis(discrete = TRUE) \n\nc\n\n\n\n#(a | b) /\n#  c\n\n\nQualification of a university student in their last 7 semesters. 🇨🇭 🇨🇭\nWorking with the libraries: “ggplot2”, “dplyr”, “hrbrthemes”, “viridis”, “readxl” and “patchwork”.\n- In Switzerland the maximum rating is 6 and the minimum 1.\n- Customised details in the colour palette and caption."
  },
  {
    "objectID": "notas/roma/index.html",
    "href": "notas/roma/index.html",
    "title": "Viaje por mi cumpleaños",
    "section": "",
    "text": "Hace poco estuve visitando Roma, aprovechando los días libres de Semana Santa y regalándome el viaje por mi cumpleaños. No había estado antes en ningún lugar de Italia, pero desde antes de planear la visita tenía la impresión de que algo sabía de la ciudad. Había visto mapas, fotos de amigos viajeros y bastante material digital de los sitios más emblemáticos de la capital italiana. \nLa noche antes del vuelo no dormí prácticamente nada, pero me levanté de la cama con muy buena energía para emprender el viaje. \nLlegando a Roma muy temprano, con mucho frío pero con una bienvenida cálida por parte del personal del aeropuerto, buongiorno, avanti, benvenuto, andiamo, allora, prego, grazie mile. Y aún no estaba claro, pero todavía quedaba una hora en tren desde el aeropuerto Leonardo Da Vinci hasta Roma.\nAntes del mediodía estaba en el hotel, cerca del casco histórico, dejando mis tres cosas y saliendo inmediatamente a disfrutar de la ciudad. El clima parecía insuperable: un sol radiante, 17 grados centígrados, miles de personas caminando por todos lados, en especial por las calles angostas y coloridas. Era una locura y una belleza. \nEl clima estaba ideal para caminar, pero las calles estaban desbordadas de gente y no se podía avanzar con total comodidad. Un mar de gente recorría las principales avenidas, la gente hablando a los gritos y fumando con frecuencia. En todo momento parecía que un auto iba a arrollar a alguien, pero por fortuna no ocurría y todos coexistían en un caos que parecía normal. \nTenía hora pautada para visitar el coliseo, pero antes era el momento indicado para ir por un café, por una buena pizza o una buena pasta. Los camareros muy habilidosos, podían entender muy bien castellano, francés e inglés, con amabilidad y rapidez tenían en la mesa lo que el cliente deseara. Por ser día de mi cumpleaños quería comer lo más tradicional que pudiera encontrarme, una pasta increíble con unas salsas espectaculares, un par de birras Peroni, unas copas de vino tinto y unos postres con helado y sabor a vainilla. Buena comida, buena atención y buenos precios, nada podía estar mejor. \nSe notaba la cara de felicidad de los turistas, sonriendo a carcajadas, brindando por la vida, haciendo fotos por todos lados y apreciando cada detalle de las maravillas de Roma. No faltaban las adversidades de los vendedores, “tenga cuidado, hay carteristas robando a toda hora”. \nLa visita al Coliseo Romano, a la Fontana di Trevi, a la Basílica de San Pedro, a la La Piazza Navona, a la Ciudad del Vaticano, generan emociones impactantes, hacen transportar tu mente a un pasado del que poco sabes. La energía que transmite cada lugar es especial. Encuentras a miles de personas leyendo su historia, apreciando el arte, haciendo fotos, pidiendo deseos, rezando y observando cada detalle. Siempre están presentes las personas que te piden que les ayudes con una foto y en ese momento intentas hacer la mejor foto de tu vida, como debe de ser. \nDespués de unas horas en Roma, cuando los ojos se acostumbran un poco al contraste del lugar, se comienza a notar el espíritu de trabajo de los locales, el ambiente fiestero por las noches y los lotes de basura en cada esquina. Roma es una ciudad bonita, con espacios bien cuidados, pero también encuentras muchos sitios descuidados, con malos olores y sucios. Es una ciudad de contrastes.\nDespedirse de Roma genera un momento de nostalgia, también de agradecimiento por haber podido materializar el viaje. Me quedo con los colores y los sabores de una ciudad cálida e impresionante, finalmente quedaba por disfrutar de uno de los aeropuertos más bonitos del mundo. El Aeropuerto Leonardo da Vinci que es también una obra de arte.\nDespués del viaje y ya en casa, he sentido como si hubiese estado en Roma desde hace mucho tiempo, tal vez parte de la imaginación, pero me queda la idea que antes había estado ahí. Cuando he viajado siempre me pregunto: ¿viviría en este lugar? Esta vez diría que no.  \nSin más. Volveré, Roma.\nHappy Birthday to me!"
  },
  {
    "objectID": "notas/n1/index.html",
    "href": "notas/n1/index.html",
    "title": "Gestos pequeños",
    "section": "",
    "text": "Creo firmemente en los gestos pequeños: saludar, sonreír, sujetar la puerta, invitar un café, devolver el balón que se escapa por la acera; intentar ser amable aunque sea un día complicado, intentar ser más grande de lo que eres, sobre todo cuando es difícil.\nLas buenas personas se dan cuenta y lo aprecian. Cuando alguien puede hacer algo por mí, también lo aprecio.\nLos gestos pequeños pueden suponer un esfuerzo, o incluso ir contra nuestra corriente, pero lo irónico es que casi siempre que los haces, te sientes mejor contigo mismo.\nPor un momento, la vida parece de repente más ligera, más tranquila y sin duda más feliz."
  },
  {
    "objectID": "posts/tormentas/index.html",
    "href": "posts/tormentas/index.html",
    "title": "Tormentas tropicales en el Océano Atlántico",
    "section": "",
    "text": "Ciclones desde 2008 a 2022 - Datos: NOAA\n\n{\n  library(\"tidyverse\")\n  library(\"showtext\")\n  library(\"ggtext\")\n  library(\"waffle\")\n  library(\"MetBrewer\")\n}\n\nstorms_df <- storms|> \n  filter(year >= 2008,\n         status %in% c(\"hurricane\", \"tropical depression\",\n                       \"tropical storm\",\"tropical wave\"))|> \n  count(year, status)\n\n\nstorms_df$status <-  gsub('hurricane','\\nHuracán\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical depression','\\nDepresión tropical\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical storm','\\nTormenta tropical\\n',storms_df$status)\nstorms_df$status <-  gsub('tropical wave','\\nOnda tropical\\n',storms_df$status)\n\n\nfont_add_google(\"Outfit\", \"title_font\")\nfont_add_google(\"Cabin\", \"body_font\")\nshowtext_auto()\n\ntitle_font <- \"title_font\"\nbody_font <- \"body_font\"\n\ntitle_text <- \"Tormentas tropicales en el Océano Atlántico\"\nsubtitle_text <- \"\"\ncaption_text <- \"Ciclones desde 2008 a 2022 - Datos: NOAA\"\n\nplot <- ggplot(storms_df, aes(fill = status, values = n)) +\n  geom_waffle(color = \"white\", size = .25, n_rows = 20, flip = TRUE, radius = unit(.5, \"pt\")) +\n  facet_wrap(~year, nrow = 1, strip.position = \"bottom\") +\n  scale_x_discrete() + \n  scale_y_continuous(labels = function(x) x * 10, # make this multiplyer the same as n_rows\n                     expand = c(0,0))+\n  \n  #MetBrewer::scale_fill_met_d(\"Hokusai2\", direction=1) +\n  scale_fill_manual(values=c(\"#154360\",\"red\",\"blue\",\"#D98880\")) +\n  \n  coord_equal()+\n  labs(title = title_text,\n       subtitle = subtitle_text,\n       caption = caption_text)+\n  theme_minimal()+\n  theme(\n    axis.title = element_blank(),\n    axis.text.x = element_text(family = body_font, size=12),\n    axis.text.y = element_text(family = body_font, size=12),\n    \n    # Legend\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    legend.spacing = unit(0.5, 'cm'),\n    legend.key.height= unit(0.5, 'cm'),\n    legend.key.width= unit(0.7, 'cm'),\n    legend.text = element_text(family = body_font,\n                               size=13,\n                               face = 'plain',\n                               color = \"grey10\"),\n    \n    # TITLE\n    plot.title.position = \"plot\",\n    plot.title = element_textbox(margin = margin(20, 0, 10, 0),\n                                 size = 30,\n                                 family = title_font,\n                                 face = \"bold\",\n                                 width = unit(55, \"lines\")),\n    \n    # SUB-TITLE\n    plot.subtitle = element_text(margin = margin(10, 0, 20, 0),\n                                 size = 16,\n                                 family = body_font,\n                                 color = \"grey15\"),\n    # CAPTION\n    plot.caption = element_text(family=body_font,\n                                face=\"plain\",\n                                size=10, \n                                color=\"grey40\",\n                                hjust=.5,\n                                margin=margin(20,0,0,0)),\n    \n    plot.background = element_rect(color=\"white\", fill=\"white\"),\n    plot.margin = margin(20, 40, 20, 40)\n  )\n\n#plot"
  },
  {
    "objectID": "posts/copenhague/index.html",
    "href": "posts/copenhague/index.html",
    "title": "Temperatura media en Copenhague, Dinamarca",
    "section": "",
    "text": "Datos: climate_CPH (1995-2019)\n\n{\nlibrary(\"tidyverse\")\nlibrary(\"ggthemes\")\nlibrary(\"ggHoriPlot\")\nlibrary(\"showtext\")\nlibrary(\"ggtext\")\n}\n\nutils::data(climate_CPH)\n\ncutpoints <- climate_CPH  %>% \n  mutate(\n    outlier = between(\n      AvgTemperature, \n      quantile(AvgTemperature, 0.25, na.rm=T)-1.5*IQR(AvgTemperature, na.rm=T),\n      quantile(AvgTemperature, 0.75, na.rm=T)+1.5*IQR(AvgTemperature, na.rm=T))) %>% \n  filter(outlier)\n\nori <- sum(range(cutpoints$AvgTemperature))/2\nsca <- seq(range(cutpoints$AvgTemperature)[1], range(cutpoints$AvgTemperature)[2], length.out = 7)[-4]\n\n\n# fonts\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\nplot <-  ggplot(data = climate_CPH) +\n  geom_horizon(aes(date_mine, \n                   AvgTemperature,\n                   fill = ..Cutpoints..), \n               origin = ori, horizonscale = sca) +\n  scale_fill_manual(values = c(\"#5A101C\",\"#BF4149\",\"#f1d2ce\",\"#CDE1F0\",\"#4C8BBF\",\"#102F63\") ) +\n  facet_grid(Year~., switch = \"y\", scales = \"free\", space = \"free\") +\n  theme_few() +\n  \n  theme(\n    text = element_text(family = \"fira\"),\n    panel.spacing.y=unit(0, \"lines\"),\n    strip.text.y.left = element_text(size = 16, angle = 0) ,\n    axis.text.y = element_blank(),\n    axis.title.y = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank(),\n    plot.title = element_text(size=30),\n    legend.position = \"bottom\",\n    axis.text=element_text(size=16),\n    legend.text = element_text(size=16),\n    legend.title = element_text(size=16)\n  ) +\n  scale_x_date(expand=c(0,0), \n               date_breaks = \"1 month\", \n               date_labels = \"%b\") +\n  xlab('\\n') +\n  ggtitle('\\nTemperatura media en Copenhague, Dinamarca\\n (1995 - 2019)', \n          '\\n') +\n  guides(fill=guide_legend(title=\"Temperatura °C\"))\n\n#plot"
  },
  {
    "objectID": "posts/library_unikn/index.html",
    "href": "posts/library_unikn/index.html",
    "title": "Generar n colores con ayuda de la librería unikn",
    "section": "",
    "text": "{\nlibrary(\"unikn\")\n}\n\n# Genear 5 colores a partir de 2:\n\npal <- c(\"#c9bfcf\",\"#3b2a46\")\npal <- unikn::usecol(pal, n = 5)\n\n\n# Genear 10 colores a partir de 3:\n\npal <- c(\"red\",\"#475682\", \"blue\")\npal <- unikn::usecol(pal, n = 10)"
  },
  {
    "objectID": "posts/bar_horizontal/index.html",
    "href": "posts/bar_horizontal/index.html",
    "title": "Gráfico de barras horizontales con ggplot2 🇧🇷",
    "section": "",
    "text": "Los datos representan el Índice de Desarrollo Humano en los diferentes distritos del Municipio de São Paulo en el 2010.\n\n# LIBRARIES\n{\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(dplyr)\nlibrary(readr)\nlibrary(sf)\nlibrary(showtext)\n}\n\n# FONTS\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\n# DATA\ndata <- readr::read_rds(\n  \"https://github.com/viniciusoike/restateinsight/raw/main/static/data/atlas_sp_hdi.rds\"\n)\n\nHDI <- data |> \n  st_drop_geometry() |> \n  mutate(\n    group_hdi = findInterval(HDI, seq(0.65, 0.95, 0.05), left.open = FALSE),\n    group_hdi = factor(group_hdi)) |> \n  group_by(group_hdi) |> \n  summarise(score = sum(pop, na.rm = TRUE)) |> \n  ungroup() |> \n  mutate(share = score / sum(score) * 100) |> \n  na.omit()\n\n\nggplot(HDI, aes(group_hdi, share, fill = group_hdi)) +\n  geom_col()\n\n\n\n\n\nHDI <- HDI |> \n  mutate(\n    y_text = if_else(group_hdi %in% c(0, 7), share + 3, share - 3),\n    label = paste0(round(share, 1), \"%\")\n  )\n\n\nggplot(HDI, aes(group_hdi, share, fill = group_hdi)) +\n  geom_col() +\n  geom_hline(yintercept = 0) +\n  geom_text(\n    aes(y = y_text, label = label, color = group_hdi),\n    size = 3\n  ) +\n  coord_flip() +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  scale_color_manual(values = c(rep(\"black\", 5), rep(\"white\", 2), \"black\")) +\n  guides(fill = \"none\", color = \"none\")\n\n\n\n\n\nx_labels <- c(\n  \"Menos desarrollado\\n<0.650\", \"(0.650 - 0.699)\", \"(0.700 - 0.749)\", \"(0.750 - 0.799)\",\n  \"(0.800 - 0.849)\", \"(0.850 - 0.899)\", \"(0.900 - 0.949)\", \"Más desarrollado\\n>0.950\"\n)\n\n\n ggplot(HDI, aes(group_hdi, share, fill = group_hdi)) +\n  geom_col() +\n  geom_hline(yintercept = 0) +\n  geom_text(\n    aes(y = y_text, label = label, color = group_hdi),\n    size = 4.5\n  ) +\n  coord_flip() +\n  scale_x_discrete(labels = x_labels) +\n  scale_fill_brewer(palette = \"YlGnBu\") +\n  scale_color_manual(values = c(rep(\"black\", 5), \n                                rep(\"white\", 2), \n                                \"black\")) +\n  guides(fill = \"none\", color = \"none\") +\n   labs(\n     title = \"\\nÍndice de Desarrollo Humano\\nSão Paulo, Brasil\\n\",\n     caption = \"Población total: 11.209.673 hab.\\nDatos: Atlas Brasil\",\n     x = \"\\nÍndice de desarrollo humano\",\n     y = \"\\nPorcentaje por grupo\\n\\n\") \n\n\n\n\n\nplot <- ggplot(HDI, aes(group_hdi, share, fill = group_hdi)) +\n   geom_col() +\n   geom_hline(yintercept = 0) +\n   geom_text(\n     aes(y = y_text, label = label, color = group_hdi),\n     size = 4.5\n   ) +\n   coord_flip() +\n   scale_x_discrete(labels = x_labels) +\n   scale_fill_brewer(palette = \"YlGnBu\") +\n   scale_color_manual(values = c(rep(\"black\", 5), \n                                 rep(\"white\", 2), \n                                 \"black\")) +\n   guides(fill = \"none\", color = \"none\") +\n   labs(\n     title = \"\\nÍndice de Desarrollo Humano\\nSão Paulo, Brasil\\n\",\n     caption = \"Población total: 11.209.673 hab.\\nDatos: Atlas Brasil\",\n     x = \"\\nÍndice de desarrollo humano\",\n     y = \"\\nPorcentaje por grupo\\n\\n\") +\n  theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 25, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 13, colour = \"gray20\"),\n    axis.title.x = element_text(size = 18, colour = \"gray20\"),\n    axis.title.y = element_text(size = 18, colour = \"gray20\"),\n    axis.text.x = element_blank(),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n#plot"
  },
  {
    "objectID": "posts/vinos/index.html",
    "href": "posts/vinos/index.html",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "",
    "text": "El objetivo es extraer información útil a partir de un análisis estadístico para este marco de datos.\nEl archivo VINOS.csv recopila datos sobre el precio de venta y otras características de una muestra aleatoria de 6496 tipos diferentes de vinos de la D.O de Utiel-Requena, Comunidad Valenciana, España."
  },
  {
    "objectID": "posts/vinos/index.html#relación-entre-la-calidad-del-vino-y-la-tonalidad-que-presenta-este.",
    "href": "posts/vinos/index.html#relación-entre-la-calidad-del-vino-y-la-tonalidad-que-presenta-este.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "2.- Relación entre la calidad del vino y la tonalidad que presenta este.",
    "text": "2.- Relación entre la calidad del vino y la tonalidad que presenta este.\nSe seleccionan las variables Tipo y Tonalidad en un marco de datos de nombre calidad:\n\ncalidad <- select(vinos, Calidad, Tipo, Tonalidad)\n\nSe verifica el tipo de variable:\n\nstr(calidad)\n\n'data.frame':   5112 obs. of  3 variables:\n $ Calidad  : int  5 5 5 6 5 5 5 7 7 5 ...\n $ Tipo     : chr  \"Tinto\" \"Tinto\" \"Tinto\" \"Tinto\" ...\n $ Tonalidad: chr  \"Azulado\" \"Azulado\" \"Azulado\" \"Azulado\" ...\n\n\nTipo Y Tonaliadad son variables de tipo Char, Calidad es una variable numerica.\nSe hace un gráfico ggplot usando un fill para diferenciar las categorias blanco y tinto:\n\nTipo:\n\nggplot(vinos, aes(x=Calidad, fill=Tipo, color=Tipo)) +\n  ggtitle(\"Tipos de vino\") +\n  geom_histogram(alpha=2, position=\"identity\", bins = 30)+\n  geom_density(alpha=0.5) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#61b15b\", \"#304bae\"))+\n  scale_fill_manual(values=c(\"#e9e4e4\", \"#c85c5c\"))\n\n\n\n\nSe puede notar que ambos vinos concentran su calidad entre 5 y 6, con mayor número de frecuencuas para el vino blanco. Es claro que el vino predominante es el vino Tipo Blanco.\n\n\nTonalidad:\n\nggplot(vinos, aes(x=Calidad, fill=Tonalidad, color=Tonalidad)) +\n  ggtitle(\"Tipos de vino - Tonalidad\") +\n  geom_histogram(alpha=1, position=\"identity\", bins = 30)+\n  geom_density(alpha=1) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))\n\n\n\n\nSegún el Tipo de Tonalidad, el vino predominante es el verdoso y en segundo lugar el vino Ocre. Los vinos con Tonalidad Azulado, Dorado, Granate y Rojo, presentan frecuencias muy bajas en su Tonalidad."
  },
  {
    "objectID": "posts/vinos/index.html#graduación-alcohólica-del-vino.",
    "href": "posts/vinos/index.html#graduación-alcohólica-del-vino.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "3.- Graduación alcohólica del vino.",
    "text": "3.- Graduación alcohólica del vino.\nPara realizar un análisis descriptivo de la variable Alcohol, variable que recoge la graduación alcohólica que presentan los distintos tipos de vinos analizados. Se verifican algunos valores estadísticos usando la función summary()\n\nsummary(vinos$Alcohol)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   8.40    9.50   10.10   10.38   10.80   14.20 \n\n\nGráfico de bigotes:\n\nggplot(vinos, aes(x=0, y=Alcohol)) +\n  geom_boxplot(bg=\"#304bae\") +\n  ggtitle(\"Boxplot: Vinos-Alcohol\")\n\n\n\n\nCon el gráfico de bigotes se puede notar la presencia de algunos datos atípicos, es decir con muy pocas ocurrencias y que marcan vinos con más de 13 en nivel de alcohol. La mediana se ubica en 10.10. Los niveles de alcohol se concentran entre 9.50 y 10.80.\n###Gráfico de barras:\n\nggplot(vinos, aes(x=Alcohol, fill=Tipo, color=Tipo)) +\n  ggtitle(\"Tipos de vino: Alcohol-Tipo\") +\n  geom_histogram(alpha=2, position=\"identity\", bins = 30)+\n  geom_density(alpha=0.5) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#61b15b\", \"#304bae\"))+\n  scale_fill_manual(values=c(\"#e9e4e4\", \"#c85c5c\"))\n\n\n\n\n\nggplot(vinos, aes(x=Alcohol, fill=Tonalidad, color=Tonalidad)) +\n  ggtitle(\"Tipos de vino: Alcohol-Tonalidad\") +\n  geom_histogram(alpha=1, position=\"identity\", bins = 10)+\n  geom_density(alpha=1) +\n  xlab(\"Nivel de alcohol\") +\n  ylab(\"Frecuencias\") +\n  scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  scale_color_manual(values=c(\"#abaaaa\", \"#abaaaa\",\"#abaaaa\", \"#abaaaa\",\"#abaaaa\", \"#abaaaa\"))\n\n\n\n\nPrueba de normalidad:\n\nqqnorm(vinos$Alcohol, pch = 19, col = \"gray50\")\nqqline(vinos$Alcohol)\n\n\n\n\nLos datos de la variable Alcohol parecen estar distribuidos de manera normal, sin embargo no puede afirmarse totalmente. En los extremos parecen alejare mucho de la línea qqline."
  },
  {
    "objectID": "posts/vinos/index.html#precio-y-graduación-alcohólica-del-vino.",
    "href": "posts/vinos/index.html#precio-y-graduación-alcohólica-del-vino.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "4.- Precio y graduación alcohólica del vino.",
    "text": "4.- Precio y graduación alcohólica del vino.\nSe seleccionan las variables Alcohol y Precio para verificar sus relaciones:\n\nprecio_a <- select(vinos, Alcohol, Precio)\nsummary(precio_a)\n\n    Alcohol          Precio     \n Min.   : 8.40   Min.   :2.000  \n 1st Qu.: 9.50   1st Qu.:3.180  \n Median :10.10   Median :4.170  \n Mean   :10.38   Mean   :4.148  \n 3rd Qu.:10.80   3rd Qu.:5.110  \n Max.   :14.20   Max.   :6.980  \n\n\n\nggplot(precio_a, aes(x=Alcohol, y=Precio)) +\n  ggtitle(\"Tipos de vino: Precio-Alcohol\") +\n  geom_point() +\n  geom_line() +\n  xlab(\"Precio\") +\n  ylab(\"Alcohol\") \n\n\n\n\n\npairs(vinos$Alcohol ~ vinos$Precio)\n\n\n\n\nEn el gráfico se puede notar que los vinos de menor grado de alcohol pueden costar precios altos y bajos, y los de mayor grado de alcohol tambíen tienen precios altos y bajos. No parece existir una tendencia evidente o sólida para afirmar que el precio influye respecto a sus niveles de alcohol."
  },
  {
    "objectID": "posts/vinos/index.html#relación-entre-el-precio-del-vino-y-el-valor-de-la-variable-calidad.",
    "href": "posts/vinos/index.html#relación-entre-el-precio-del-vino-y-el-valor-de-la-variable-calidad.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "5. Relación entre el precio del vino y el valor de la variable calidad.",
    "text": "5. Relación entre el precio del vino y el valor de la variable calidad.\nSe seleccionan las variables Calidad y Precio para verificar sus relaciones:\n\nprecio <- select(vinos, Calidad, Precio)\nsummary(precio)\n\n    Calidad         Precio     \n Min.   :3.00   Min.   :2.000  \n 1st Qu.:5.00   1st Qu.:3.180  \n Median :6.00   Median :4.170  \n Mean   :5.75   Mean   :4.148  \n 3rd Qu.:6.00   3rd Qu.:5.110  \n Max.   :9.00   Max.   :6.980  \n\n\n\nggplot(precio, aes(x=Calidad, y=Precio)) +\n  ggtitle(\"Tipos de vino: Precio-Calidad\") +\n  geom_point() +\n  geom_line() +\n  xlab(\"Precio\") +\n  ylab(\"Calidad\") \n\n\n\n\nClaramente se nota que entre mayor calidad de vino, mayor el precio. En promedio un vino de calidad 6 cuesta un poco más de 4."
  },
  {
    "objectID": "posts/vinos/index.html#precio-medio-de-los-vinos.",
    "href": "posts/vinos/index.html#precio-medio-de-los-vinos.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "7.- Precio medio de los vinos.",
    "text": "7.- Precio medio de los vinos.\n\n¿Proporcionan los datos suficiente evidencia para concluir que el precio medio de los vinos es diferente a 4.25 euros?. Realiza una prueba de hipótesis para responder a esta pregunta.\n\n\nObtén un intervalo con una confianza del 95% para el precio medio de los vinos. ¿Es seguro utilizar un procedimiento t en este apartado? Comprueba si se cumplen las condiciones necesarias. Escribe un breve párrafo con tus conclusiones.\n\nsummary(vinos$Precio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   3.180   4.170   4.148   5.110   6.980 \n\nmean(vinos$Precio)\n\n[1] 4.147788\n\n\nEl precio medio de los vinos es de 4.147788 y con una mediana de 4.148.\nSe hace la prueba t.test:\n\nt.test(x=vinos$Precio, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 4.25, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.95)\n\n\n    One Sample t-test\n\ndata:  vinos$Precio\nt = -6.116, df = 5111, p-value = 1.031e-09\nalternative hypothesis: true mean is not equal to 4.25\n95 percent confidence interval:\n 4.115024 4.180551\nsample estimates:\nmean of x \n 4.147788 \n\n\nCon 95% de confianza se puede asegurar que los valores del precio del vino se ubican entre 4.115024 y 4.180551 Euros. Lo que significa que es inferior a los 4.25 planteados en el interrogante."
  },
  {
    "objectID": "posts/vinos/index.html#precio-medio-de-los-vinos-con-tonalidad-verdoso.",
    "href": "posts/vinos/index.html#precio-medio-de-los-vinos-con-tonalidad-verdoso.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "8.- Precio medio de los vinos con Tonalidad Verdoso.",
    "text": "8.- Precio medio de los vinos con Tonalidad Verdoso.\n\n¿Proporcionan los datos suficiente evidencia para concluir que el precio medio de los vinos con tonalidad Verdoso es diferente a 3.55 euros?. Realiza una prueba de hipótesis para responder a esta pregunta.\n\n\nObtén un intervalo con una confianza del 90% para el precio medio de los vinos. ¿Es seguro utilizar un procedimiento t en este apartado? Comprueba si se cumplen las condiciones necesarias. Escribe un breve párrafo con tus conclusiones.\nSe seleccionan las variables Calidad y Precio para verificar sus relaciones:\n\nprecio_ver <- filter(vinos, Tonalidad==\"Verdoso\")\nsummary(precio_ver$Precio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   2.680   3.280   3.473   4.260   5.970 \n\n\nEl precio medio de los vinos de Tonaldad verdoso es de 3.473 Euros. Se platea una prueba t con un 90% de confianza:\n\nt.test(x=precio_ver$Precio, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 3.473, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.90)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Precio\nt = 0.016029, df = 1605, p-value = 0.9872\nalternative hypothesis: true mean is not equal to 3.473\n90 percent confidence interval:\n 3.432355 3.514445\nsample estimates:\nmean of x \n   3.4734 \n\n\nCon un 90% de confianza se puede asegurar que el precio del vino de Tonalidad verdoso se ubica entre 3.432355 y 3.514445 Euros. Un poco menos de lo planteado en el interronte."
  },
  {
    "objectID": "posts/vinos/index.html#graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8.",
    "href": "posts/vinos/index.html#graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "9.- Graduación alcohólica de los vinos cuya calidad presenta un valor de 8.",
    "text": "9.- Graduación alcohólica de los vinos cuya calidad presenta un valor de 8.\n\n¿Proporcionan los datos suficiente evidencia para concluir que la graduación alcohólica de los vinos con valoración 8 tienen un contenido medio de alcohol diferente de 11.9 grados?. Realiza una prueba de hipótesis para responder a esta pregunta (realízala a niveles de significación del 1 y del 5%).\n\n\nObtén un intervalo con una confianza del 95% para el precio medio de los vinos de calidad 8. ¿Es seguro utilizar un procedimiento t en este apartado? Comprueba si se cumplen las condiciones necesarias. Escribe un breve párrafo con tus conclusiones.\n\nsummary(precio_ver$Alcohol)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  9.000   9.200   9.400   9.413   9.600   9.900 \n\nqqnorm(precio_ver$Alcohol)\nqqline(precio_ver$Alcohol)\n\n\n\n\n\nlibrary(nortest) \nad.test(precio_ver$Alcohol)\n\n\n    Anderson-Darling normality test\n\ndata:  precio_ver$Alcohol\nA = 21.521, p-value < 2.2e-16\n\n\n\nt.test(precio_ver$Alcohol, alternative='two.sided',\n       conf.level=0.99, mu=11.9)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Alcohol\nt = -367.69, df = 1605, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 11.9\n99 percent confidence interval:\n 9.395225 9.430117\nsample estimates:\nmean of x \n 9.412671 \n\n\n\nt.test(precio_ver$Alcohol, alternative='two.sided',\n       conf.level=0.95, mu=11.9)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Alcohol\nt = -367.69, df = 1605, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 11.9\n95 percent confidence interval:\n 9.399402 9.425940\nsample estimates:\nmean of x \n 9.412671 \n\n\nEl p-value es mucho menor que el nivel de significancia de 5% y 1%. Con un nivel de confianza del 99%"
  },
  {
    "objectID": "posts/vinos/index.html#comparación-de-la-graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8-y-un-valor-de-4.",
    "href": "posts/vinos/index.html#comparación-de-la-graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8-y-un-valor-de-4.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "10.- Comparación de la graduación alcohólica de los vinos cuya calidad presenta un valor de 8 y un valor de 4.",
    "text": "10.- Comparación de la graduación alcohólica de los vinos cuya calidad presenta un valor de 8 y un valor de 4.\nEn primer lugar se verifica la homogeneidad de varianzas:\n\nt.test(x=vinos$Alcohol, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 8, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.95)\n\n\n    One Sample t-test\n\ndata:  vinos$Alcohol\nt = 148.41, df = 5111, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 8\n95 percent confidence interval:\n 10.34518 10.40797\nsample estimates:\nmean of x \n 10.37657 \n\n\n\nt.test(x=vinos$Alcohol, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 4, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.95)\n\n\n    One Sample t-test\n\ndata:  vinos$Alcohol\nt = 398.19, df = 5111, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 4\n95 percent confidence interval:\n 10.34518 10.40797\nsample estimates:\nmean of x \n 10.37657 \n\n\nCon un intervalo de confianza de 95% se puede afirmar que el rango de graduación alcohólica no varia demasiado, sea con mu de 4 o de 8."
  },
  {
    "objectID": "posts/vinos/index.html#comprobación-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-granate.",
    "href": "posts/vinos/index.html#comprobación-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-granate.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "11.- Comprobación de las condiciones de normalidad de la variable precio para la tonalidad Granate.",
    "text": "11.- Comprobación de las condiciones de normalidad de la variable precio para la tonalidad Granate.\nSe seleccionan las variables Precio y Tonalidad:\n\nprecio_granate <- select(vinos, Precio, Tonalidad)\nprecio_granate <- filter(precio_granate, Tonalidad==\"Granate\")\nhead(precio_granate, 20)\n\n   Precio Tonalidad\n1    5.82   Granate\n2    3.89   Granate\n3    3.39   Granate\n4    5.62   Granate\n5    5.39   Granate\n6    4.98   Granate\n7    5.54   Granate\n8    3.93   Granate\n9    3.23   Granate\n10   4.02   Granate\n11   5.07   Granate\n12   4.15   Granate\n13   5.35   Granate\n14   5.11   Granate\n15   4.71   Granate\n16   4.88   Granate\n17   4.50   Granate\n18   4.30   Granate\n19   4.24   Granate\n20   3.18   Granate\n\n\nPrueba gráfica de normalidad:\n\nqqnorm(precio_granate$Precio)\nqqline(precio_granate$Precio)\n\n\n\nhist(precio_granate$Precio)\n\n\n\n\n\nlillie.test(precio_granate$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_granate$Precio\nD = 0.039675, p-value = 0.08544\n\n\nComo el p_value es mayor al 5%, por ende no se rechaza la hipotesis nula para el precio del vino de Tonalidad Granate, lo cual significa que los datos tienen un comportamiento normal."
  },
  {
    "objectID": "posts/vinos/index.html#comprobación-del-cumplimiento-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-azulado-y-para-la-tonalidad-dorado.",
    "href": "posts/vinos/index.html#comprobación-del-cumplimiento-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-azulado-y-para-la-tonalidad-dorado.",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "12.- Comprobación del cumplimiento de las condiciones de normalidad de la variable precio para la tonalidad Azulado y para la tonalidad Dorado.",
    "text": "12.- Comprobación del cumplimiento de las condiciones de normalidad de la variable precio para la tonalidad Azulado y para la tonalidad Dorado.\nSe seleccionan las variables Precio y Tonalidad:\n\nprecio_azulado <- select(vinos, Precio, Tonalidad)\nprecio_azulado <- filter(precio_azulado, Tonalidad==\"Azulado\")\nhead(precio_azulado, 20)\n\n   Precio Tonalidad\n1    3.50   Azulado\n2    2.01   Azulado\n3    3.27   Azulado\n4    3.46   Azulado\n5    2.14   Azulado\n6    3.36   Azulado\n7    3.18   Azulado\n8    5.32   Azulado\n9    2.23   Azulado\n10   2.07   Azulado\n11   3.20   Azulado\n12   2.13   Azulado\n13   2.31   Azulado\n14   2.51   Azulado\n15   2.29   Azulado\n16   4.31   Azulado\n17   5.06   Azulado\n18   3.48   Azulado\n19   2.07   Azulado\n20   2.21   Azulado\n\n\nSe hace la prueba de normalidad (AZULADO):\n\nqqnorm(precio_azulado$Precio)\nqqline(precio_azulado$Precio)\n\n\n\n\n\nt.test(precio_azulado$Precio)\n\n\n    One Sample t-test\n\ndata:  precio_azulado$Precio\nt = 95.1, df = 679, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 3.147974 3.280702\nsample estimates:\nmean of x \n 3.214338 \n\n\n\nlillie.test(precio_azulado$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_azulado$Precio\nD = 0.12293, p-value < 2.2e-16\n\n\nComo el p_value es menor al 5%, por ende se rechaza la hipotesis nula para el precio del vino de Tonalidad Azulado, lo cual significa que no se asemeja a una distribución normal.\nSe hace la prueba de normalidad (DORADO):\n\nprecio_dorado <- select(vinos, Precio, Tonalidad)\nprecio_dorado <- filter(precio_dorado, Tonalidad==\"Dorado\")\nhead(precio_dorado, 20)\n\n   Precio Tonalidad\n1    3.28    Dorado\n2    4.57    Dorado\n3    4.14    Dorado\n4    5.66    Dorado\n5    4.32    Dorado\n6    4.97    Dorado\n7    4.21    Dorado\n8    4.26    Dorado\n9    5.18    Dorado\n10   5.17    Dorado\n11   5.28    Dorado\n12   3.92    Dorado\n13   3.87    Dorado\n14   5.01    Dorado\n15   4.32    Dorado\n16   4.95    Dorado\n17   5.16    Dorado\n18   3.60    Dorado\n19   5.17    Dorado\n20   4.28    Dorado\n\n\n\nqqnorm(precio_dorado$Precio)\nqqline(precio_dorado$Precio)\n\n\n\nhist(precio_dorado$Precio)\n\n\n\n\n\nt.test(precio_dorado$Precio)\n\n\n    One Sample t-test\n\ndata:  precio_dorado$Precio\nt = 179.27, df = 1255, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 4.300230 4.395391\nsample estimates:\nmean of x \n 4.347811 \n\n\n\nlillie.test(precio_azulado$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_azulado$Precio\nD = 0.12293, p-value < 2.2e-16\n\n\nComo el p_value es menor al 5%, por ende se rechaza la hipotesis nula para el precio del vino de Tonalidad Dorado, lo cual significa que no se asemeja a una distribución normal, aunque tiene una similitud que puede resultar engañosa."
  },
  {
    "objectID": "posts/vinos/index.html#precio-medio-de-los-vinos",
    "href": "posts/vinos/index.html#precio-medio-de-los-vinos",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "7.- Precio medio de los vinos",
    "text": "7.- Precio medio de los vinos\n\nsummary(vinos$Precio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   3.180   4.170   4.148   5.110   6.980 \n\nmean(vinos$Precio)\n\n[1] 4.147788\n\n\nEl precio medio de los vinos es de 4.147788 y con una mediana de 4.148.\nSe hace la prueba t.test:\n\nt.test(x=vinos$Precio, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 4.25, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.95)\n\n\n    One Sample t-test\n\ndata:  vinos$Precio\nt = -6.116, df = 5111, p-value = 1.031e-09\nalternative hypothesis: true mean is not equal to 4.25\n95 percent confidence interval:\n 4.115024 4.180551\nsample estimates:\nmean of x \n 4.147788 \n\n\nCon 95% de confianza se puede asegurar que los valores del precio del vino se ubican entre 4.115024 y 4.180551 Euros. Lo que significa que es inferior a los 4.25 planteados en el interrogante."
  },
  {
    "objectID": "posts/vinos/index.html#precio-medio-de-los-vinos-con-tonalidad-verdoso",
    "href": "posts/vinos/index.html#precio-medio-de-los-vinos-con-tonalidad-verdoso",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "8.- Precio medio de los vinos con Tonalidad Verdoso",
    "text": "8.- Precio medio de los vinos con Tonalidad Verdoso\nSe seleccionan las variables Calidad y Precio para verificar sus relaciones:\n\nprecio_ver <- filter(vinos, Tonalidad==\"Verdoso\")\nsummary(precio_ver$Precio)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  2.000   2.680   3.280   3.473   4.260   5.970 \n\n\nEl precio medio de los vinos de Tonaldad verdoso es de 3.473 Euros. Se platea una prueba t con un 90% de confianza:\n\nt.test(x=precio_ver$Precio, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 3.473, paired = FALSE, var.equal = FALSE,\n       conf.level = 0.90)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Precio\nt = 0.016029, df = 1605, p-value = 0.9872\nalternative hypothesis: true mean is not equal to 3.473\n90 percent confidence interval:\n 3.432355 3.514445\nsample estimates:\nmean of x \n   3.4734 \n\n\nCon un 90% de confianza se puede asegurar que el precio del vino de Tonalidad verdoso se ubica entre 3.432355 y 3.514445 Euros. Un poco menos de lo planteado en el interronte."
  },
  {
    "objectID": "posts/vinos/index.html#graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8",
    "href": "posts/vinos/index.html#graduación-alcohólica-de-los-vinos-cuya-calidad-presenta-un-valor-de-8",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "9.- Graduación alcohólica de los vinos cuya calidad presenta un valor de 8",
    "text": "9.- Graduación alcohólica de los vinos cuya calidad presenta un valor de 8\n\nsummary(precio_ver$Alcohol)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  9.000   9.200   9.400   9.413   9.600   9.900 \n\nqqnorm(precio_ver$Alcohol)\nqqline(precio_ver$Alcohol)\n\n\n\n\n\nlibrary(nortest) \nad.test(precio_ver$Alcohol)\n\n\n    Anderson-Darling normality test\n\ndata:  precio_ver$Alcohol\nA = 21.521, p-value < 2.2e-16\n\n\n\nt.test(precio_ver$Alcohol, alternative='two.sided',\n       conf.level=0.99, mu=11.9)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Alcohol\nt = -367.69, df = 1605, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 11.9\n99 percent confidence interval:\n 9.395225 9.430117\nsample estimates:\nmean of x \n 9.412671 \n\n\n\nt.test(precio_ver$Alcohol, alternative='two.sided',\n       conf.level=0.95, mu=11.9)\n\n\n    One Sample t-test\n\ndata:  precio_ver$Alcohol\nt = -367.69, df = 1605, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 11.9\n95 percent confidence interval:\n 9.399402 9.425940\nsample estimates:\nmean of x \n 9.412671 \n\n\nEl p-value es mucho menor que el nivel de significancia de 5% y 1%. Con un nivel de confianza del 99%"
  },
  {
    "objectID": "posts/vinos/index.html#tipo",
    "href": "posts/vinos/index.html#tipo",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "Tipo:",
    "text": "Tipo:\n\nggplot(vinos, aes(x=Calidad, fill=Tipo, color=Tipo)) +\n  ggtitle(\"Tipos de vino\") +\n  geom_histogram(alpha=2, position=\"identity\", bins = 30)+\n  geom_density(alpha=0.5) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#61b15b\", \"#304bae\"))+\n  scale_fill_manual(values=c(\"#e9e4e4\", \"#c85c5c\"))\n\n\n\n\nSe puede notar que ambos vinos concentran su calidad entre 5 y 6, con mayor número de frecuencuas para el vino blanco. Es claro que el vino predominante es el vino Tipo Blanco."
  },
  {
    "objectID": "posts/vinos/index.html#tonalidad",
    "href": "posts/vinos/index.html#tonalidad",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "Tonalidad:",
    "text": "Tonalidad:\n\nggplot(vinos, aes(x=Calidad, fill=Tonalidad, color=Tonalidad)) +\n  ggtitle(\"Tipos de vino - Tonalidad\") +\n  geom_histogram(alpha=1, position=\"identity\", bins = 30)+\n  geom_density(alpha=1) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))\n\n\n\n\nSegún el Tipo de Tonalidad, el vino predominante es el verdoso y en segundo lugar el vino Ocre. Los vinos con Tonalidad Azulado, Dorado, Granate y Rojo, presentan frecuencias muy bajas en su Tonalidad."
  },
  {
    "objectID": "posts/vinos/index.html#relación-entre-la-calidad-del-vino-y-la-tonalidad-que-presenta",
    "href": "posts/vinos/index.html#relación-entre-la-calidad-del-vino-y-la-tonalidad-que-presenta",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "2.- Relación entre la calidad del vino y la tonalidad que presenta",
    "text": "2.- Relación entre la calidad del vino y la tonalidad que presenta\nSe seleccionan las variables Tipo y Tonalidad en un marco de datos de nombre calidad:\n\ncalidad <- select(vinos, Calidad, Tipo, Tonalidad)\n\nSe verifica el tipo de variable:\n\nstr(calidad)\n\n'data.frame':   5112 obs. of  3 variables:\n $ Calidad  : int  5 5 5 6 5 5 5 7 7 5 ...\n $ Tipo     : chr  \"Tinto\" \"Tinto\" \"Tinto\" \"Tinto\" ...\n $ Tonalidad: chr  \"Azulado\" \"Azulado\" \"Azulado\" \"Azulado\" ...\n\n\nTipo Y Tonaliadad son variables de tipo Char, Calidad es una variable númerica.\nSe hace un gráfico ggplot usando un fill para diferenciar las categorias blanco y tinto:\n\nTipo:\n\nggplot(vinos, aes(x=Calidad, fill=Tipo, color=Tipo)) +\n  ggtitle(\"Tipos de vino\") +\n  geom_histogram(alpha=2, position=\"identity\", bins = 8, size=.1)+\n  geom_density(alpha=0.5) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"white\", \"white\"))+\n  scale_fill_manual(values=c(\"#e9e4e4\", \"#c85c5c\")) +\n    theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nSe puede notar que ambos vinos concentran su calidad entre 5 y 6, con mayor número de frecuencuas para el vino blanco. Es claro que el vino predominante es el vino Tipo Blanco.\n\n\nTonalidad:\n\nggplot(vinos, aes(x=Calidad, fill=Tonalidad, color=Tonalidad)) +\n  ggtitle(\"Tipos de vino - Tonalidad\") +\n  geom_histogram(alpha=1, position=\"identity\", bins = 8, size=.1, color=\"white\")+\n  geom_density(alpha=1) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\")) +\n    theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nSegún el Tipo de Tonalidad, el vino predominante es el verdoso y en segundo lugar el vino Ocre. Los vinos con Tonalidad Azulado, Dorado, Granate y Rojo, presentan frecuencias muy bajas en su Tonalidad."
  },
  {
    "objectID": "posts/vinos/index.html#graduación-alcohólica-del-vino",
    "href": "posts/vinos/index.html#graduación-alcohólica-del-vino",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "3.- Graduación alcohólica del vino",
    "text": "3.- Graduación alcohólica del vino\nPara realizar un análisis descriptivo de la variable Alcohol, variable que recoge la graduación alcohólica que presentan los distintos tipos de vinos analizados. Se verifican algunos valores estadísticos usando la función summary()\n\nsummary(vinos$Alcohol)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   8.40    9.50   10.10   10.38   10.80   14.20 \n\n\nGráfico de bigotes:\n\nggplot(vinos, aes(x=0, y=Alcohol)) +\n  geom_boxplot(bg=\"#304bae\") +\n  ggtitle(\"Boxplot: Vinos-Alcohol\") +\n    theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nCon el gráfico de bigotes se puede notar la presencia de algunos datos atípicos, es decir con muy pocas ocurrencias y que marcan vinos con más de 13 en nivel de alcohol. La mediana se ubica en 10.10. Los niveles de alcohol se concentran entre 9.50 y 10.80.\n###Gráfico de barras:\n\nggplot(vinos, aes(x=Alcohol, fill=Tipo, color=Tipo)) +\n  ggtitle(\"Tipos de vino: Alcohol-Tipo\") +\n  geom_histogram(alpha=2, position=\"identity\", bins = 30, size=.1)+\n  geom_density(alpha=0.5) +\n  xlab(\"Calidad\") +\n  ylab(\"Frecuencias\") +\n  scale_color_manual(values=c(\"white\", \"white\"))+\n  scale_fill_manual(values=c(\"#e9e4e4\", \"#c85c5c\")) +\n    theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\n\nggplot(vinos, aes(x=Alcohol, fill=Tonalidad, color=Tonalidad)) +\n  ggtitle(\"Tipos de vino: Alcohol-Tonalidad\") +\n  geom_histogram(alpha=1, position=\"identity\", bins = 10, size=.1, color=\"white\")+\n  geom_density(alpha=1) +\n  xlab(\"Nivel de alcohol\") +\n  ylab(\"Frecuencias\") +\n  scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  scale_color_manual(values=c(\"#abaaaa\", \"#abaaaa\",\"#abaaaa\", \"#abaaaa\",\"#abaaaa\", \"#abaaaa\")) +\n      theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nPrueba de normalidad:\n\nqqnorm(vinos$Alcohol, pch = 19, col = \"blue\")\nqqline(vinos$Alcohol)\n\n\n\n\nLos datos de la variable Alcohol parecen estar distribuidos de manera normal, sin embargo no puede afirmarse totalmente. En los extremos parecen alejare mucho de la línea qqline."
  },
  {
    "objectID": "posts/vinos/index.html#precio-y-graduación-alcohólica-del-vino",
    "href": "posts/vinos/index.html#precio-y-graduación-alcohólica-del-vino",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "4.- Precio y graduación alcohólica del vino",
    "text": "4.- Precio y graduación alcohólica del vino\nSe seleccionan las variables Alcohol y Precio para verificar sus relaciones:\n\nprecio_a <- select(vinos, Alcohol, Precio)\nsummary(precio_a)\n\n    Alcohol          Precio     \n Min.   : 8.40   Min.   :2.000  \n 1st Qu.: 9.50   1st Qu.:3.180  \n Median :10.10   Median :4.170  \n Mean   :10.38   Mean   :4.148  \n 3rd Qu.:10.80   3rd Qu.:5.110  \n Max.   :14.20   Max.   :6.980  \n\n\n\nlibrary(viridis)\nggplot(precio_a, aes(y=Alcohol, x=Precio)) +\n  geom_point( aes(color=Precio),  alpha = 0.7) +\n  ggtitle(\"Tipos de vino: Precio-Alcohol\") +\n  xlab(\"Precio (€)\") +\n  ylab(\"Alcohol\") +\n  scale_color_viridis(discrete = F, direction=-1, option = \"C\") +\n      theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\n\npairs(vinos$Alcohol ~ vinos$Precio, \n      pch = 19, \n      col = 4)\n\n\n\n\nEn el gráfico se puede notar que los vinos de menor grado de alcohol pueden costar precios altos y bajos, y los de mayor grado de alcohol tambíen tienen precios altos y bajos. No parece existir una tendencia evidente o sólida para afirmar que el precio influye respecto a sus niveles de alcohol."
  },
  {
    "objectID": "posts/vinos/index.html#relación-entre-el-precio-del-vino-y-el-valor-de-la-variable-calidad",
    "href": "posts/vinos/index.html#relación-entre-el-precio-del-vino-y-el-valor-de-la-variable-calidad",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "5. Relación entre el precio del vino y el valor de la variable calidad",
    "text": "5. Relación entre el precio del vino y el valor de la variable calidad\nSe seleccionan las variables Calidad y Precio para verificar sus relaciones:\n\nprecio <- select(vinos, Calidad, Precio)\nsummary(precio)\n\n    Calidad         Precio     \n Min.   :3.00   Min.   :2.000  \n 1st Qu.:5.00   1st Qu.:3.180  \n Median :6.00   Median :4.170  \n Mean   :5.75   Mean   :4.148  \n 3rd Qu.:6.00   3rd Qu.:5.110  \n Max.   :9.00   Max.   :6.980  \n\n\n\nprecio$Calidad <- as.character(precio$Calidad)\nggplot(precio, aes(x=Precio, fill=Calidad)) +\n  geom_histogram(bins = 30, colour='white', size=.1) +\n    ggtitle(\"Tipos de vino: Precio-Calidad\") +\n  xlab(\"Precio (€)\") +\n  ylab(\"Cantidad\") +\n  scale_fill_viridis(discrete = T, direction=-1, option = \"C\") +\n      theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nClaramente se nota que entre mayor calidad de vino, mayor el precio. En promedio un vino de calidad 6 cuesta un poco más de 4."
  },
  {
    "objectID": "posts/vinos/index.html#comprobación-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-granate",
    "href": "posts/vinos/index.html#comprobación-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-granate",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "11.- Comprobación de las condiciones de normalidad de la variable precio para la tonalidad Granate",
    "text": "11.- Comprobación de las condiciones de normalidad de la variable precio para la tonalidad Granate\nSe seleccionan las variables Precio y Tonalidad:\n\nprecio_granate <- select(vinos, Precio, Tonalidad)\nprecio_granate <- filter(precio_granate, Tonalidad==\"Granate\")\nhead(precio_granate, 20)\n\n   Precio Tonalidad\n1    5.82   Granate\n2    3.89   Granate\n3    3.39   Granate\n4    5.62   Granate\n5    5.39   Granate\n6    4.98   Granate\n7    5.54   Granate\n8    3.93   Granate\n9    3.23   Granate\n10   4.02   Granate\n11   5.07   Granate\n12   4.15   Granate\n13   5.35   Granate\n14   5.11   Granate\n15   4.71   Granate\n16   4.88   Granate\n17   4.50   Granate\n18   4.30   Granate\n19   4.24   Granate\n20   3.18   Granate\n\n\nPrueba gráfica de normalidad:\n\nqqnorm(precio_granate$Precio)\nqqline(precio_granate$Precio)\n\n\n\nhist(precio_granate$Precio)\n\n\n\n\n\nlillie.test(precio_granate$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_granate$Precio\nD = 0.039675, p-value = 0.08544\n\n\nComo el p_value es mayor al 5%, por ende no se rechaza la hipotesis nula para el precio del vino de Tonalidad Granate, lo cual significa que los datos tienen un comportamiento normal."
  },
  {
    "objectID": "posts/vinos/index.html#comprobación-del-cumplimiento-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-azulado-y-para-la-tonalidad-dorado",
    "href": "posts/vinos/index.html#comprobación-del-cumplimiento-de-las-condiciones-de-normalidad-de-la-variable-precio-para-la-tonalidad-azulado-y-para-la-tonalidad-dorado",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "12.- Comprobación del cumplimiento de las condiciones de normalidad de la variable precio para la tonalidad Azulado y para la tonalidad Dorado",
    "text": "12.- Comprobación del cumplimiento de las condiciones de normalidad de la variable precio para la tonalidad Azulado y para la tonalidad Dorado\nSe seleccionan las variables Precio y Tonalidad:\n\nprecio_azulado <- select(vinos, Precio, Tonalidad)\nprecio_azulado <- filter(precio_azulado, Tonalidad==\"Azulado\")\nhead(precio_azulado, 20)\n\n   Precio Tonalidad\n1    3.50   Azulado\n2    2.01   Azulado\n3    3.27   Azulado\n4    3.46   Azulado\n5    2.14   Azulado\n6    3.36   Azulado\n7    3.18   Azulado\n8    5.32   Azulado\n9    2.23   Azulado\n10   2.07   Azulado\n11   3.20   Azulado\n12   2.13   Azulado\n13   2.31   Azulado\n14   2.51   Azulado\n15   2.29   Azulado\n16   4.31   Azulado\n17   5.06   Azulado\n18   3.48   Azulado\n19   2.07   Azulado\n20   2.21   Azulado\n\n\nSe hace la prueba de normalidad (AZULADO):\n\nqqnorm(precio_azulado$Precio)\nqqline(precio_azulado$Precio)\n\n\n\n\n\nt.test(precio_azulado$Precio)\n\n\n    One Sample t-test\n\ndata:  precio_azulado$Precio\nt = 95.1, df = 679, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 3.147974 3.280702\nsample estimates:\nmean of x \n 3.214338 \n\n\n\nlillie.test(precio_azulado$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_azulado$Precio\nD = 0.12293, p-value < 2.2e-16\n\n\nComo el p_value es menor al 5%, por ende se rechaza la hipotesis nula para el precio del vino de Tonalidad Azulado, lo cual significa que no se asemeja a una distribución normal.\nSe hace la prueba de normalidad (DORADO):\n\nprecio_dorado <- select(vinos, Precio, Tonalidad)\nprecio_dorado <- filter(precio_dorado, Tonalidad==\"Dorado\")\nhead(precio_dorado, 20)\n\n   Precio Tonalidad\n1    3.28    Dorado\n2    4.57    Dorado\n3    4.14    Dorado\n4    5.66    Dorado\n5    4.32    Dorado\n6    4.97    Dorado\n7    4.21    Dorado\n8    4.26    Dorado\n9    5.18    Dorado\n10   5.17    Dorado\n11   5.28    Dorado\n12   3.92    Dorado\n13   3.87    Dorado\n14   5.01    Dorado\n15   4.32    Dorado\n16   4.95    Dorado\n17   5.16    Dorado\n18   3.60    Dorado\n19   5.17    Dorado\n20   4.28    Dorado\n\n\n\nqqnorm(precio_dorado$Precio)\nqqline(precio_dorado$Precio)\n\n\n\nhist(precio_dorado$Precio)\n\n\n\n\n\nt.test(precio_dorado$Precio)\n\n\n    One Sample t-test\n\ndata:  precio_dorado$Precio\nt = 179.27, df = 1255, p-value < 2.2e-16\nalternative hypothesis: true mean is not equal to 0\n95 percent confidence interval:\n 4.300230 4.395391\nsample estimates:\nmean of x \n 4.347811 \n\n\n\nlillie.test(precio_azulado$Precio)\n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  precio_azulado$Precio\nD = 0.12293, p-value < 2.2e-16\n\n\nComo el p_value es menor al 5%, por ende se rechaza la hipotesis nula para el precio del vino de Tonalidad Dorado, lo cual significa que no se asemeja a una distribución normal, aunque tiene una similitud que puede resultar engañosa."
  },
  {
    "objectID": "posts/vinos/index.html#calidad-del-vino",
    "href": "posts/vinos/index.html#calidad-del-vino",
    "title": "Vinos 2021, análisis descriptivo",
    "section": "1.- Calidad del vino",
    "text": "1.- Calidad del vino\nSe cargan las librerías:\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(nortest)\nlibrary(showtext)\n\nSe cargan las fuentes de texto:\n\nfont_add_google(\"Luckiest Guy\",\"ramp\")\nfont_add_google(\"Bebas Neue\",\"beb\")\nfont_add_google(\"Fira Sans\",\"fira\")\nfont_add_google(\"Raleway\",\"ral\")\nfont_add_google(\"Bitter\",\"bit\")\nshowtext_auto()\n\nSe carga la base de datos:\n\nvinos <- read.csv2(\"VINOS.csv\")\n\nSe verifica previamente la información básica de los datos (tipo de variables y la dimensión):\n\nstr(vinos)\n\n'data.frame':   5112 obs. of  8 variables:\n $ X        : int  1 2 3 4 5 6 7 8 9 10 ...\n $ Tipo     : chr  \"Tinto\" \"Tinto\" \"Tinto\" \"Tinto\" ...\n $ pH       : num  3.51 3.2 3.26 3.16 3.51 3.51 3.3 3.39 3.36 3.35 ...\n $ Sulfatos : num  0.56 0.68 0.65 0.58 0.56 0.56 0.46 0.47 0.57 0.8 ...\n $ Alcohol  : num  9.4 9.8 9.8 9.8 9.4 9.4 9.4 10 9.5 10.5 ...\n $ Tonalidad: chr  \"Azulado\" \"Azulado\" \"Azulado\" \"Azulado\" ...\n $ Calidad  : int  5 5 5 6 5 5 5 7 7 5 ...\n $ Precio   : num  3.5 2.01 3.27 3.46 2.14 3.36 3.18 5.82 5.32 3.89 ...\n\n\n\nPH, Sulfatos, Alcohol, Tobalidad y Precio, son variables numericas.\nX y Calidad son variables de tipo entero.\nTipo, variable de tipo char.\n\nSe ejecuta la instrucción “summary” para conocer algunos valores estadísticos:\n\nsummary(vinos$Calidad)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   3.00    5.00    6.00    5.75    6.00    9.00 \n\n\nSe traza un gráfico de barras:\n\n  ggplot(vinos, aes(x=Calidad, fill=Tonalidad)) +\n  geom_histogram(bins = 8,  colour='white', size=.1) +\n  ggtitle(\"Gráfico de barras: Vinos-Calidad\") +\n    scale_fill_manual(values=c(\"#304bae\", \"#f5f7c0\",\"#ab2a3e\", \"#c9af4f\",\"#c85c5c\", \"#61b15b\"))+\n  theme(\n    text = element_text(family = \"fira\"),\n    panel.grid = element_blank(),\n    plot.title = element_text(size = 16, colour = \"gray20\", face=\"bold\"),\n    axis.text.y = element_text(size = 10, colour = \"gray20\"),\n    axis.title.x = element_text(size = 10, colour = \"gray20\"),\n    axis.title.y = element_text(size = 10, colour = \"gray20\"),\n    panel.background = element_rect(fill = 'white', color = 'white')\n  )\n\n\n\n\nEntre los valores 5 y 6 se encuentra la mayor concentración de la calidad de los vinos, con una mediana de 6 y con frecuencias superior a 1500.\nTabla de frecuencias (Calidad de vinos):\n\ncalidad <- vinos$Calidad\ncalidad <- table(calidad)\ncalidad\n\ncalidad\n   3    4    5    6    7    8    9 \n  22  176 1849 2204  737  119    5 \n\n\nSe seleccionan las variables Tipo y Calidad en un marco de datos de nombre calidad_t con la finalidad de hacer una tabla de frecuencias usando la función table().\n\ncalidad_t <- select(vinos, Tipo, Calidad)\ncalidad_t <- table(calidad_t)\ncalidad_t <- as.data.frame(calidad_t)\ncalidad_t\n\n     Tipo Calidad Freq\n1  Blanco       3   12\n2   Tinto       3   10\n3  Blanco       4  125\n4   Tinto       4   51\n5  Blanco       5 1180\n6   Tinto       5  669\n7  Blanco       6 1639\n8   Tinto       6  565\n9  Blanco       7  604\n10  Tinto       7  133\n11 Blanco       8  110\n12  Tinto       8    9\n13 Blanco       9    5\n14  Tinto       9    0\n\n\nSe seleccionan las variables Tonalidad y Calidad en un marco de datos de nombre calidad_tt con la finalidad de obtener otra tabla de frecuencias.\n\ncalidad_tt <- select(vinos, Tonalidad, Calidad)\ncalidad_tt <- table(calidad_tt)\ncalidad_tt <- as.data.frame(calidad_tt)\nhead(calidad_tt, 10)\n\n   Tonalidad Calidad Freq\n1    Azulado       3    6\n2     Dorado       3    4\n3    Granate       3    3\n4       Ocre       3    2\n5       Rojo       3    1\n6    Verdoso       3    6\n7    Azulado       4   24\n8     Dorado       4   55\n9    Granate       4   13\n10      Ocre       4    9\n\n\nSe pueden notar frecuencias altas para el vino Tipo blanco, y además, frecuencias altas para los vinos de Tonalidad Verdoso y Azulado. Los valores de Calidad en general se concentran principalmente en los valores 5 y 6."
  },
  {
    "objectID": "posts/webScraping/index.html",
    "href": "posts/webScraping/index.html",
    "title": "Web Scraping con rvest",
    "section": "",
    "text": "Existen varios paquetes para el web scraping en R, cada uno con sus ventajas y limitaciones. Esta vez se trabaja con el paquete ”rvest” y la intención es obtener un marco de datos de Wikipedia.\n\nEn primer lugar se obtienen datos de la URL asignada, posteriormente se seleccionan los datos deseados: se seleccionan viables, se filtran elementos, se ordenan posiciones, se cambian nombres de variables, se cambian tipos de datos…\nLa finalidad de trabajar con este paquete es obtener y ordenar datos rápidamente para estudios específicos.\n\nManipulación de datos con “dplyr”.\n\n\n# Librerías \nlibrary(\"dplyr\")\nlibrary(\"rvest\")\n\n# URL\nwebpage <- read_html(\"https://es.wikipedia.org/wiki/Anexo:Municipios_de_Espa%C3%B1a_por_poblaci%C3%B3n\")\n\n# Se obtiene los datos de la URL:\nt <- webpage %>%\n  html_nodes(\".mw-parser-output\") %>%\n  html_table()  \nt <- t[[1]] \n\n# Se seleccionan los elementos deseados:\nt <- t[(8:31),] \n\n# Se seleccionan variables y se cambian los nombres:\nt1 <- select(t, 2:5)\nvariables <- c(\"Nombre\", \"Población\", \"Provincia\", \"Comunidad Autónoma\")\nnames(t1) = c(variables)\nt1\n\n# A tibble: 24 × 4\n   Nombre                     Población Provincia           `Comunidad Autónoma`\n   <chr>                      <chr>     <chr>               <chr>               \n 1 Murcia                     469 177   Región de Murcia R… Región de Murcia Re…\n 2 Palma de Mallorca          423 350   Islas Baleares Isl… Islas Baleares Isla…\n 3 Las Palmas de Gran Canaria 378 027   Las PalmasLas Palm… Canarias Canarias   \n 4 Alicante                   349 282   AlicanteAlicante    Comunidad Valencian…\n 5 Bilbao                     346 096   Vizcaya Vizcaya     País Vasco País Vas…\n 6 Córdoba                    323 763   Córdoba Córdoba     Andalucía Andalucía \n 7 Valladolid                 297 459   Valladolid Vallado… Castilla y León Cas…\n 8 Vigo                       293 652   Pontevedra Ponteve… Galicia Galicia     \n 9 Hospitalet de Llobregat    274 455   Barcelona Barcelona Cataluña Cataluña   \n10 Gijón                      268 313   Principado de Astu… Principado de Astur…\n# ℹ 14 more rows"
  }
]