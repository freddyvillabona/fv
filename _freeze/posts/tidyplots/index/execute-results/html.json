{
  "hash": "1b81ca19c7ac611f7ca26048cb0197ac",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  message: false\n  warning: false\n  fig-show: no\ntitle: \"TIDYPLOTS\"\nauthor: \"FV\"\ndate: \"2025-09-21\"\ncategories: [code, analysis]\nimage: \"tidyplot.png\"\n---\n\n\n\n\nAumento de precios de la gasolina en EE.UU.\n\n\nPrecios medios semanales de la gasolina al por menor. Gasolina de grado regular.. 1990 - 2025.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(showtext)\nlibrary(camcorder)\nlibrary(ggtext)\n#library(nrBrand)\nlibrary(glue)\nlibrary(ggHoriPlot)\nlibrary(PrettyCols)\n\n\n# Load data ---------------------------------------------------------------\n\ntuesdata <- tidytuesdayR::tt_load(\"2025-07-01\")\nweekly_gas_prices <- tuesdata$weekly_gas_prices\n\n\n# Load fonts --------------------------------------------------------------\n\nfont_add_google(\"Space Grotesk\", \"space\")\nshowtext_auto()\nshowtext_opts(dpi = 300)\n\n\n# Define colours and fonts-------------------------------------------------\n\nbg_col <- \"transparent\"\ntext_col <- prettycols(\"RedBlues\")[9]\nhighlight_col <- prettycols(\"RedBlues\")[1]\n\nbody_font <- \"space\"\ntitle_font <- \"space\"\n\n\n# Data wrangling ----------------------------------------------------------\n\n# price data\nprice_data <- weekly_gas_prices |>\n  mutate(\n    year = year(date),\n    week = week(date)\n  ) |>\n  filter(fuel == \"gasoline\", grade == \"regular\", formulation == \"all\") |>\n  select(year, week, price) |>\n  complete(year, week)\n\n# horizon plot data\ncutpoints <- price_data |>\n  mutate(\n    outlier = between(\n      price,\n      quantile(price, 0.25, na.rm = TRUE) -\n        1.5 * IQR(price, na.rm = TRUE),\n      quantile(price, 0.75, na.rm = TRUE) +\n        1.5 * IQR(price, na.rm = TRUE)\n    )\n  ) |>\n  filter(outlier)\nori <- sum(range(cutpoints$price)) / 2\nsca <- seq(range(cutpoints$price)[1],\n           range(cutpoints$price)[2],\n           length.out = 7\n)[-4]\n\n\n# Start recording ---------------------------------------------------------\n\ngg_record(\n  dir = file.path(\"2025\", \"2025-07-01\", \"recording\"),\n  device = \"png\",\n  width = 5,\n  height = 14,\n  units = \"in\",\n  dpi = 300\n)\n\n\n# Define text -------------------------------------------------------------\n\n\ntitle <- \"Los precios de la gasolina siguen siendo altos.\"\nst <- \"Precios medios semanales de la gasolina al por menor. Gasolina de grado regular.. 1990 - 2025.\"\ncap <- paste0(\n  st, \"<br><br>**Data**: U.S. Energy Information Administration<br>**Graphic**: \", \"Programandoenr and Nikola\"\n)\n\n\n# Plot --------------------------------------------------------------------\n\n\n\n\nggplot(data = price_data) +\n  geom_horizon(\n    mapping = aes(\n      x = week,\n      y = price,\n      fill = after_stat(Cutpoints)\n    ),\n    origin = ori, horizonscale = sca\n  ) +\n  # annotations\n  geom_textbox(\n    data = data.frame(\n      x = 54, y = 1,\n      label = \"El excedente de gas natural en el mercado provoca una bajada de los precios, lo que se conoce como «la burbuja del gas».*\",\n      year = 1995\n    ),\n    mapping = aes(x = x, y = y, label = label),\n    fill = bg_col,\n    box.color = \"transparent\",\n    color = text_col,\n    halign = 0,\n    hjust = 0,\n    maxwidth = 0.2\n  ) +\n  geom_textbox(\n    data = data.frame(\n      x = 54, y = 1, label = \"Crisis financiera\", year = 2008\n    ),\n    mapping = aes(x = x, y = y, label = label),\n    fill = \"transparent\",\n    box.color = \"transparent\",\n    color = text_col,\n    halign = 0,\n    hjust = 0,\n    maxwidth = 0.2\n  ) +\n  geom_textbox(\n    data = data.frame(\n      x = 54, y = 1,\n      label = \" Los precios del petróleo suben debido a la preocupación por el suministro tras el inicio de la *Primavera Árabe.*\",\n      year = 2014\n    ),\n    mapping = aes(x = x, y = y, label = label),\n    fill = \"transparent\",\n    box.color = \"transparent\",\n    color = text_col,\n    halign = 0,\n    hjust = 0,\n    maxwidth = 0.2\n  ) +\n  geom_textbox(\n    data = data.frame(\n      x = 54, y = 1,\n      label = \"Los precios de la gasolina alcanzarán su máximo a mediados de 2022\", year = 2022\n    ),\n    mapping = aes(x = x, y = y, label = label),\n    fill = \"transparent\",\n    box.color = \"transparent\",\n    color = text_col,\n    halign = 0,\n    hjust = 0,\n    maxwidth = 0.2\n  ) +\n  # styling\n  facet_wrap(year ~ ., strip.position = \"left\", ncol = 1) +\n  guides(\n    fill = guide_legend(ncol = 1, reverse = TRUE)\n  ) +\n  labs(\n    title = title,\n    subtitle = cap\n  ) +\n  scale_x_continuous(limits = c(1, 70)) +\n  scale_fill_manual(\n    values = prettycols(\"RedBlues\")[c(1, 3, 4, 6, 7, 9)],\n    labels = c(\"Precio\\nmás alto\", \"\", \"\", \"\", \"\", \"Precio\\nmás bajo\"),\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void(base_size = 12, base_family = body_font) +\n  theme(\n    plot.margin = margin(5, 5, 5, 5),\n    plot.title.position = \"plot\",\n    plot.caption.position = \"plot\",\n    plot.background = element_rect(fill = bg_col, colour = bg_col),\n    panel.background = element_rect(fill = bg_col, colour = bg_col),\n    plot.title = element_textbox_simple(\n      colour = text_col,\n      hjust = 0,\n      halign = 0,\n      margin = margin(b = 5, t = 5),\n      lineheight = 0.8,\n      family = title_font,\n      face = \"bold\",\n      size = rel(1.6)\n    ),\n    plot.subtitle = element_textbox_simple(\n      colour = text_col,\n      hjust = 0,\n      halign = 0,\n      margin = margin(b = 25, t = 5),\n      family = body_font,\n      maxwidth = 0.8\n    ),\n    strip.text = element_text(\n      angle = 0,\n      colour = text_col,\n      size = rel(0.9),\n      hjust = 0,\n      lineheight = 0.3,\n      face = \"bold\",\n      margin = margin(r = 2)\n    ),\n    panel.spacing = unit(0.1, \"lines\"),\n    legend.position = \"inside\",\n    legend.position.inside = c(0.89, 1.07),\n    legend.direction = \"vertical\",\n    legend.text = element_text(colour = text_col),\n    legend.title = element_blank(),\n    legend.key.spacing = unit(0.3, \"lines\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n![](oil1.png)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}