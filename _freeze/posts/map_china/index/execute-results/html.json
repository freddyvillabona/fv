{
  "hash": "71731d558a18c05e4fe48b9980b0217c",
  "result": {
    "engine": "knitr",
    "markdown": "---\nexecute:\n  message: false\n  warning: false\n  fig-show: no\ntitle: \"Población de China\"\nauthor: \"FV\"\ndate: \"2024-10-17\"\ncategories: [code, map]\nimage: \"china_1.png\"\n---\n\n\n\nPartiendo con datos geográficos y variables numéricas, es posible trazar un gráfico ggplot con la función gradiente de colores. En este caso trabajando con la densidad poblacional de China.  \n\nEste mapa intenta mostrar algunos detalles significativos: \n\n- Gradiente de colores (mayor o menor densidad poblacional)\n- Trazo de segmentos, puntos y textos en ubicaciones especificas \n- Tema personalizado (fondos, fuentes, márgenes, leyendas)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n{\nlibrary(showtext)\nlibrary(unikn)\nlibrary(tidyverse)\nlibrary(mapchina)\nlibrary(sf)\nlibrary(ggspatial)\n}\n\nfont_add_google(\"Fira Sans\",\"fira\")\nshowtext_auto()\n\ns <- data.frame(x1 = 99, x2 = 127.5, y1 = 26, y2 = 50)\n\nchina <- china\ndf <- china \n\n\nplot <- ggplot(data = df) +\n  ggtitle(\"   Población de China\") +\n  xlab(\"\")+\n  ylab(\"\") +\n  \n  geom_sf(aes(fill = rank(Density)), linewidth = .1) +\n  \n  scale_fill_gradient2(\n    name = waiver(),\n    low = \"red\",\n    mid = \"#f9f8f9\",\n    high = \"blue\",\n    midpoint = 0,\n    space = \"Lab\",\n    na.value = \"grey50\",\n    transform = \"identity\",\n    guide = \"colourbar\",\n    aesthetics = \"fill\"\n  ) +\n  \n  geom_text(\n            label=\"94%\",\n            x = 115, y = 30,\n            size = 12,\n            family=\"fira\",\n            fontface=\"bold\",\n            colour = \"gray20\") +\n  \n  geom_text(\n    label=\"vive aquí\",\n    x = 115, y = 28,\n    size = 6,\n    family=\"fira\",\n    colour = \"gray20\") +\n  \n  geom_text(\n    label=\"4%\",\n    x = 90, y = 40,\n    size=12,\n    family=\"fira\",\n    fontface=\"bold\",\n    colour = \"gray20\") +\n  \n  geom_text(\n    label=\"vive aquí\",\n    x = 90, y = 38,\n    size=6,\n    family=\"fira\",\n    colour = \"gray20\") +\n  \n  \n  geom_text(\n    label=\"Población: 1.411.750.000 habs.\",\n    x = 90, y = 52,\n    size=4,\n    family=\"fira\",\n    colour = \"gray20\") +\n \n  geom_segment(data = s,\n               aes(x = x1, y = y1, xend = x2, yend = y2),\n               linewidth=1.5, colour = \"#fa4c35\") +\n  \n  geom_point(data = s,\n               aes(x = x1, y = y1,\n                   size=1.8), colour = \"#fa4c35\") +\n  \n  geom_text(\n    label=\"Tengchong\",\n    x = 95, y = 26,\n    size = 4,\n    family=\"fira\",\n    colour = \"gray20\") +\n  \n  \n  geom_point(data = s,\n             aes(x = x2, y = y2,\n                 size=1.8), colour = \"#fa4c35\") +\n  \n  \n  geom_text(\n    label=\"Heihe\",\n    x = 130, y = 50,\n    size = 4,\n    family=\"fira\",\n    colour = \"gray20\") +\n  \n  \n  \n  theme(plot.title = element_text(size = 30, face = \"bold\"),\n        plot.subtitle = element_text(size = 20),\n        legend.position=\"bottom\") +\n  labs(fill= \"%\") +\n\n  annotation_scale() +\n  \n  theme(text = element_text(family = \"fira\"),\n        panel.grid = element_blank(),\n        plot.title = element_text(size = 25, colour = \"gray20\", face=\"bold\"),\n        axis.text.y = element_text(size = 8, colour = \"gray20\"),\n        axis.title.x = element_text(size = 18, colour = \"gray20\"),\n        axis.title.y = element_text(size = 8, colour = \"gray20\"),\n        axis.text.x = element_text(size = 8, colour = \"gray20\"),\n        panel.background = element_rect(fill = 'white', color = 'white'),\n        legend.position = \"none\") \n```\n:::\n\n\n\n\n![](china_1.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}